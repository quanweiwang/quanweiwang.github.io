<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>王权伟の博客</title>
  <subtitle>好记性不如烂笔头</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.wangquanwei.com/"/>
  <updated>2018-07-29T11:02:27.329Z</updated>
  <id>http://www.wangquanwei.com/</id>
  
  <author>
    <name>王权伟</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>让mac系统终端支持ss的代理</title>
    <link href="http://www.wangquanwei.com/2018-07-28-1.html"/>
    <id>http://www.wangquanwei.com/2018-07-28-1.html</id>
    <published>2018-07-28T13:18:08.000Z</published>
    <updated>2018-07-29T11:02:27.329Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h1><p>近期发现github似乎被GFW给墙了，在终端向github提交博客文章一直失败，然而终端默认不支持ss代理。<br>本文将介绍mac系统下如何让终端支持ss代理。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">RPC failed; curl 55 SSL_write() returned SYSCALL, errno = 32</div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>1、搭建一个ss，具体的百度、谷歌。<br>2、下载ShadowsocksX-NG，具体下载地址百度、谷歌。<br>3、运行ShadowsocksX-NG，右键点小飞机，然后有一个Copy HTTP Proxy Shell Export Line，点击之后会copy命令。</p>
<p><img src="http://ojgg6fpio.bkt.clouddn.com/6B8B6DA9-C3E3-4BCF-986F-36B12CE02B68.png" alt="image">  </p>
<p>4、到终端paste，回车即可。<br><img src="http://ojgg6fpio.bkt.clouddn.com/FF6D32B9-166B-4517-B6BF-B8B599AC3FDC.png" alt="image"></p>
<p>这样终端就可以使用ss科学上网啦。</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://github.com/hexojs/hexo/issues/231" target="_blank" rel="external">https://github.com/hexojs/hexo/issues/231</a>  </p>
<p><a href="https://github.com/shadowsocks/ShadowsocksX-NG/issues/147" target="_blank" rel="external">https://github.com/shadowsocks/ShadowsocksX-NG/issues/147</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h1&gt;&lt;p&gt;近期发现github似乎被GFW给墙了，在终端向github提交博客文章一直失败，然而终端默认不支持ss代理。&lt;br&gt;本文将介绍mac系统下如何让终端支持ss代理。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;RPC failed; curl 55 SSL_write() returned SYSCALL, errno = 32&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://www.wangquanwei.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Cannot modify constraints for UITabBar managed by a controller</title>
    <link href="http://www.wangquanwei.com/2018-06-25-1.html"/>
    <id>http://www.wangquanwei.com/2018-06-25-1.html</id>
    <published>2018-06-25T04:43:08.000Z</published>
    <updated>2018-07-26T14:00:49.377Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h1><p>近期在开发偶遇优选2.0时遇到一个奇葩异常：Cannot modify constraints for UITabBar managed by a controller。</p>
<h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><blockquote>
<p>自动布局只能使用在UIViews及其子类，也就是说工具栏之类的不能使用。</p>
</blockquote>
<a id="more"></a>
<h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p><img src="http://ojgg6fpio.bkt.clouddn.com/%E9%A6%96%E9%A1%B5.jpg" alt="image"></p>
<p>给UITabbarController的tabbar addSubView子视图（即红色线条那块），然后给子视图设置约束导致的。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">self.bottomLineView = [[UIView alloc] init];</div><div class="line">self.bottomLineView.backgroundColor = RGB_HEX(0xcc5253);</div><div class="line">[self.tabBar addSubview:self.bottomLineView];</div><div class="line"></div><div class="line">[self.bottomLineView makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">    make.left.equalTo(self.tabBar);</div><div class="line">    make.width.equalTo(self.bottomLineViewWidth);</div><div class="line">    make.top.equalTo(self.tabBar);</div><div class="line">    make.height.equalTo(3);</div><div class="line">&#125;];</div></pre></td></tr></table></figure>
<p>查阅api发现<br><img src="http://ojgg6fpio.bkt.clouddn.com/875B69FE-847B-43C6-8FE6-6FA93147E7A6.png" alt="image"></p>
<blockquote>
<p>// Provided for -[UIActionSheet showFromTabBar:]. Attempting to modify  the contents of the tab bar directly will throw an exception.  </p>
<p>//提供-[UIActionSheet showFromTabBar:]。尝试直接修改选项卡栏的内容将抛出异常。</p>
</blockquote>
<h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">self.bottomLineView = [[UIView alloc] initWithFrame:CGRectMake(0, -3, self.bottomLineViewWidth, 3)];</div><div class="line">self.bottomLineView.backgroundColor = RGB_HEX(0xcc5253);</div><div class="line">[self.tabBar addSubview:self.bottomLineView];</div></pre></td></tr></table></figure>
<p>即把autolayout改为传统的计算frame。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h1&gt;&lt;p&gt;近期在开发偶遇优选2.0时遇到一个奇葩异常：Cannot modify constraints for UITabBar managed by a controller。&lt;/p&gt;
&lt;h1 id=&quot;结论&quot;&gt;&lt;a href=&quot;#结论&quot; class=&quot;headerlink&quot; title=&quot;结论&quot;&gt;&lt;/a&gt;结论&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;自动布局只能使用在UIViews及其子类，也就是说工具栏之类的不能使用。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://www.wangquanwei.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>UITableViewHeaderFooterView使用autolayout时报约束异常的解决方法</title>
    <link href="http://www.wangquanwei.com/2018-06-11-1.html"/>
    <id>http://www.wangquanwei.com/2018-06-11-1.html</id>
    <published>2018-06-11T03:37:08.000Z</published>
    <updated>2018-07-26T14:00:49.377Z</updated>
    
    <content type="html"><![CDATA[<div align="center"><br><br><img src="http://ojgg6fpio.bkt.clouddn.com/ios7_dev.png" alt="image"><br><br></div>

<h1 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h1><p>近期在开发偶遇优选2.0时遇到一个奇葩问题：UITableViewHeaderFooterView使用autolayout时报约束异常，但显示上一切正常。经过一番排查，约束并无冲突。网上有看到说因为使用了复用才会出现这问题，这里并不是通过取消复用来解决此问题。虽问题解决，但甚是不解。望大神答疑解惑。<br><a id="more"></a></p>
<div align="center"><br><br><img src="https://gss0.bdstatic.com/-4o3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike80%2C5%2C5%2C80%2C26/sign=653c67e15efbb2fb202650402e234bc1/8cb1cb1349540923e1860cc29958d109b2de499a.jpg" alt="image"><br><br></div>

<h1 id="异常示例"><a href="#异常示例" class="headerlink" title="异常示例"></a>异常示例</h1><div align="center"><br><br><img src="http://ojgg6fpio.bkt.clouddn.com/B3A05CE1-FC4F-4B37-9892-0404DAF8D7F9.png" alt="image"><br><br></div><br>上图红框部分用到了UITableViewHeaderFooterView，作为section的头，并不是UITableView的headerView。<br><br><br>这是初始化了UITableViewHeaderFooterView子视图的代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div></pre></td><td class="code"><pre><div class="line">- (void)initUI &#123;</div><div class="line">    </div><div class="line">    self.contentView.backgroundColor = [UIColor whiteColor];</div><div class="line">    </div><div class="line">    //商家logo</div><div class="line">    self.logoImageView = [[UIImageView alloc] init];</div><div class="line">    self.logoImageView.backgroundColor = RGB_HEX(0xffffff);</div><div class="line">    self.logoImageView.layer.borderWidth = 1.f;</div><div class="line">    self.logoImageView.layer.borderColor = RGB_HEX(0xbfbfbf).CGColor;</div><div class="line">    self.logoImageView.layer.cornerRadius = 50/2.f;</div><div class="line">    self.logoImageView.clipsToBounds = YES;</div><div class="line">    [self addSubview:self.logoImageView];</div><div class="line">    </div><div class="line">    //店铺名</div><div class="line">    self.storeNameLabel = [[UILabel alloc] init];</div><div class="line">    self.storeNameLabel.font = [UIFont boldSystemFontOfSize:kHeight(32)];</div><div class="line">    self.storeNameLabel.textAlignment = NSTextAlignmentCenter;</div><div class="line">    [self addSubview:self.storeNameLabel];</div><div class="line">    </div><div class="line">    //套餐背景视图</div><div class="line">    self.comboImageView = [[UIImageView alloc] init];</div><div class="line">//    self.comboImageView.contentMode = UIViewContentModeScaleAspectFit;</div><div class="line">    self.comboImageView.image = [UIImage imageNamed:@&quot;order_rectangle&quot;];</div><div class="line">    [self addSubview:self.comboImageView];</div><div class="line">    </div><div class="line">    //套餐视图</div><div class="line">    self.comboView = [[UIView alloc] init];</div><div class="line">    self.comboView.clipsToBounds = YES;</div><div class="line">    self.comboView.layer.cornerRadius = 4.f;</div><div class="line">    [self addSubview:self.comboView];</div><div class="line">    </div><div class="line">    //商品图片</div><div class="line">    self.merchandiseImageView = [[UIImageView alloc] init];</div><div class="line">    self.merchandiseImageView.clipsToBounds = YES;</div><div class="line">    self.merchandiseImageView.contentMode = UIViewContentModeScaleAspectFill;</div><div class="line">//    self.merchandiseImageView.backgroundColor = [UIColor randomColor];</div><div class="line">    [self.comboView addSubview:self.merchandiseImageView];</div><div class="line">    </div><div class="line">    //商品标题</div><div class="line">    self.titleLabel = [[UILabel alloc] init];</div><div class="line">    self.titleLabel.textAlignment = NSTextAlignmentCenter;</div><div class="line">    self.titleLabel.font = [UIFont boldSystemFontOfSize:kHeight(32)];</div><div class="line">    [self.comboView addSubview:self.titleLabel];</div><div class="line">    </div><div class="line">    //有效期</div><div class="line">    self.expirationTimeLabel = [[UILabel alloc] init];</div><div class="line">    self.expirationTimeLabel.textAlignment = NSTextAlignmentCenter;</div><div class="line">    self.expirationTimeLabel.font = [UIFont pingFangRegularFontOfSize:kHeight(24)];</div><div class="line">    [self.comboView addSubview:self.expirationTimeLabel];</div><div class="line">    </div><div class="line">    //左线条</div><div class="line">    self.leftLineView = [[UIView alloc] init];</div><div class="line">    self.leftLineView.backgroundColor = RGB_HEX(0x000000);</div><div class="line">    [self.comboView addSubview:self.leftLineView];</div><div class="line">    </div><div class="line">    //右线条</div><div class="line">    self.rightLineView = [[UIView alloc] init];</div><div class="line">    self.rightLineView.backgroundColor = RGB_HEX(0x000000);</div><div class="line">    [self.comboView addSubview:self.rightLineView];</div><div class="line">    </div><div class="line">    //当前砍价人数</div><div class="line">    self.currentBargainLabel = [[UILabel alloc] init];</div><div class="line">    self.currentBargainLabel.textAlignment = NSTextAlignmentCenter;</div><div class="line">    self.currentBargainLabel.font = [UIFont pingFangRegularFontOfSize:kHeight(24)];</div><div class="line">    [self.comboView addSubview:self.currentBargainLabel];</div><div class="line">    </div><div class="line">    //当前价格</div><div class="line">    self.bargainPriceLabel = [[UILabel alloc] init];</div><div class="line">    self.bargainPriceLabel.textColor = RGB_HEX(0xb4282d);</div><div class="line">    self.bargainPriceLabel.font = [UIFont pingFangMediumFontOfSize:kHeight(26)];</div><div class="line">    [self addSubview:self.bargainPriceLabel];</div><div class="line">    </div><div class="line">    //进度条倒三角</div><div class="line">    self.progressTriangleImageView = [[UIImageView alloc] init];</div><div class="line">//    self.progressTriangleImageView.image = [UIImage imageNamed:@&quot;order_progress_triangle&quot;];</div><div class="line">    [self addSubview:self.progressTriangleImageView];</div><div class="line">    </div><div class="line">    //进度条</div><div class="line">    //左右轨的图片</div><div class="line">    UIImage *stetchLeftTrack= [UIImage imageNamed:@&quot;brightness_bar&quot;];</div><div class="line">    UIImage *stetchRightTrack = [UIImage imageNamed:@&quot;brightness_bar_bg&quot;];</div><div class="line">    //滑块图片</div><div class="line">    UIImage *thumbImage = [UIImage imageNamed:@&quot;order_progress_round&quot;];</div><div class="line">    </div><div class="line">    self.slider = [[UISlider alloc] init];</div><div class="line">    self.slider.userInteractionEnabled = NO;</div><div class="line">//    self.slider.enabled = NO; //禁止滑动</div><div class="line">    [self.slider setMinimumTrackImage:stetchLeftTrack forState:UIControlStateNormal];</div><div class="line">    [self.slider setMaximumTrackImage:stetchRightTrack forState:UIControlStateNormal];</div><div class="line">    //注意这里要加UIControlStateHightlighted的状态，否则当拖动滑块时滑块将变成原生的控件</div><div class="line">    [self.slider setThumbImage:thumbImage forState:UIControlStateHighlighted];</div><div class="line">    [self.slider setThumbImage:thumbImage forState:UIControlStateNormal];</div><div class="line">    [self addSubview:self.slider];</div><div class="line">    </div><div class="line">    //优选价</div><div class="line">    self.originalPriceLabel = [[UILabel alloc] init];</div><div class="line">    self.originalPriceLabel.numberOfLines = 2;</div><div class="line">    self.originalPriceLabel.textAlignment = NSTextAlignmentCenter;</div><div class="line">    self.originalPriceLabel.font = [UIFont pingFangRegularFontOfSize:kHeight(26)];</div><div class="line">    </div><div class="line">    [self addSubview:self.originalPriceLabel];</div><div class="line">    </div><div class="line">    //最惠价</div><div class="line">    self.preferentialPriceLabel = [[UILabel alloc] init];</div><div class="line">    self.preferentialPriceLabel.numberOfLines = 2;</div><div class="line">    self.preferentialPriceLabel.textAlignment = NSTextAlignmentCenter;</div><div class="line">    self.preferentialPriceLabel.font = [UIFont pingFangRegularFontOfSize:kHeight(26)];</div><div class="line">    [self addSubview:self.preferentialPriceLabel];</div><div class="line">    </div><div class="line">    //底部分割线</div><div class="line">    self.bottomLineView = [[UIView alloc] init];</div><div class="line">    self.bottomLineView.backgroundColor = RGB_HEX(0xF2F2F2);</div><div class="line">    [self addSubview:self.bottomLineView];</div><div class="line">    </div><div class="line">    //砍价人数</div><div class="line">    self.bargainNumLabel = [[UILabel alloc] init];</div><div class="line">    self.bargainNumLabel.font = [UIFont pingFangMediumFontOfSize:kHeight(30)];</div><div class="line">    [self addSubview:self.bargainNumLabel];</div><div class="line">    </div><div class="line">    //约束</div><div class="line">    </div><div class="line">    //头像</div><div class="line">    [self.logoImageView makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">        make.centerX.equalTo(self);</div><div class="line">        make.top.equalTo(self).offset(kHeight(30));</div><div class="line">        make.width.height.equalTo(50);</div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">    //店铺名</div><div class="line">    [self.storeNameLabel makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">        make.left.right.equalTo(self);</div><div class="line">        make.top.equalTo(self.logoImageView.bottom).offset(kHeight(26));</div><div class="line">    &#125;];</div><div class="line"></div><div class="line">    //套餐视图</div><div class="line">    [self.comboView makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">        make.top.equalTo(self.storeNameLabel.bottom).offset(kHeight(34));</div><div class="line">        make.left.equalTo(self).offset(kWidth(52));</div><div class="line">        make.right.equalTo(self).offset(-kWidth(52));</div><div class="line">        make.height.equalTo(kHeight(586));</div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">    //套餐背景视图</div><div class="line">    [self.comboImageView makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">        make.top.equalTo(self.comboView).offset(-kHeight(10));</div><div class="line">        make.left.equalTo(self.comboView).offset(-kWidth(16));</div><div class="line">        make.right.equalTo(self.comboView).offset(kWidth(16));</div><div class="line">        make.bottom.equalTo(self.comboView).offset(kHeight(10));</div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">    //商品图片</div><div class="line">    [self.merchandiseImageView makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">        make.top.left.right.equalTo(self.comboView);</div><div class="line">        make.height.equalTo(kHeight(308));</div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">    //标题</div><div class="line">    [self.titleLabel makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">        make.left.right.equalTo(self.comboView);</div><div class="line">        make.top.equalTo(self.merchandiseImageView.bottom).offset(kHeight(46));</div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">    //截止日期</div><div class="line">    [self.expirationTimeLabel makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">        make.centerX.equalTo(self.titleLabel);</div><div class="line">        make.top.equalTo(self.titleLabel.bottom).offset(kHeight(26));</div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">    //左线条</div><div class="line">    [self.leftLineView makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">        make.right.equalTo(self.expirationTimeLabel.left).offset(-kWidth(28));</div><div class="line">        make.centerY.equalTo(self.expirationTimeLabel);</div><div class="line">        make.width.equalTo(kWidth(20));</div><div class="line">        make.height.equalTo(1);</div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">    //右线条</div><div class="line">    [self.rightLineView makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">        make.left.equalTo(self.expirationTimeLabel.right).offset(14);</div><div class="line">        make.centerY.equalTo(self.expirationTimeLabel);</div><div class="line">        make.width.equalTo(kWidth(20));</div><div class="line">        make.height.equalTo(1);</div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">    //当前参与砍价人数</div><div class="line">    [self.currentBargainLabel makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">        make.left.right.equalTo(self);</div><div class="line">        make.top.equalTo(self.expirationTimeLabel.bottom).offset(kHeight(30));</div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">    //进度条</div><div class="line">    [self.slider makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">        make.top.equalTo(self.comboView.bottom).offset(kHeight(110));</div><div class="line">        make.left.equalTo(self).offset(kWidth(50));</div><div class="line">        make.right.equalTo(self).offset(-kWidth(50));</div><div class="line">        make.height.equalTo(3);</div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">    //倒三角</div><div class="line">    [self.progressTriangleImageView makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">        make.bottom.equalTo(self.slider.top).equalTo(-kHeight(16));</div><div class="line">        make.left.equalTo(self.slider.left);</div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">    //当前价格</div><div class="line">    [self.bargainPriceLabel makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">        make.left.equalTo(self.slider.left);</div><div class="line">        make.bottom.equalTo(self.progressTriangleImageView.top).offset(-kHeight(10));</div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">    //优选价</div><div class="line">    [self.originalPriceLabel makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">        make.left.equalTo(self.slider);</div><div class="line">        make.top.equalTo(self.slider.bottom).offset(kHeight(16));</div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">    //最惠价</div><div class="line">    [self.preferentialPriceLabel makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">        make.right.equalTo(self.slider);</div><div class="line">        make.top.equalTo(self.slider.bottom).offset(kHeight(16));</div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">    //底部分割线</div><div class="line">    [self.bottomLineView makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">        make.left.right.equalTo(self);</div><div class="line">        make.top.equalTo(self.preferentialPriceLabel.bottom).offset(kHeight(70));</div><div class="line">        make.height.equalTo(kHeight(20));</div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">    //砍价好友</div><div class="line">    [self.bargainNumLabel makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">        make.left.equalTo(self).offset(kWidth(30));</div><div class="line">        make.right.equalTo(self).offset(-kWidth(30));</div><div class="line">        make.top.equalTo(self.bottomLineView.bottom).offset(kHeight(30));</div><div class="line">        make.bottom.equalTo(self);</div><div class="line">    &#125;];</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br>这是初始化UITableView的代码<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line">- (void)initUI &#123;</div><div class="line">    </div><div class="line">    self.title = @&quot;砍价&quot;;</div><div class="line">    </div><div class="line">    self.view.backgroundColor = [UIColor whiteColor];</div><div class="line">    </div><div class="line">    self.table = [UITableView customTableViewWithFrame:CGRectZero</div><div class="line">                                                 style:UITableViewStyleGrouped</div><div class="line">                                        separatorColor:[UIColor clearColor]</div><div class="line">                          estimatedSectionHeaderHeight:UITableViewAutomaticDimension</div><div class="line">                          estimatedSectionFooterHeight:UITableViewAutomaticDimension];</div><div class="line">    self.table.hidden = YES;</div><div class="line">    self.table.backgroundColor = [UIColor whiteColor];</div><div class="line">    self.table.showsVerticalScrollIndicator = NO;</div><div class="line">    self.table.showsHorizontalScrollIndicator = NO;</div><div class="line">    self.table.delegate = self;</div><div class="line">    self.table.dataSource = self;</div><div class="line">    [self.table registerClass:[VCBargainHeaderView class] forHeaderFooterViewReuseIdentifier:@&quot;VCBargainHeaderView&quot;];</div><div class="line">    [self.table registerClass:[VCBargainFriendsCell class] forCellReuseIdentifier:@&quot;VCBargainFriendsCell&quot;];</div><div class="line">    [self.view addSubview:self.table];</div><div class="line">    </div><div class="line">    //底部视图</div><div class="line">    self.bottomView = [[UIView alloc] init];</div><div class="line">    self.bottomView.backgroundColor = [UIColor whiteColor];</div><div class="line">    self.bottomView.hidden = YES;</div><div class="line">    [self.view addSubview:self.bottomView];</div><div class="line">    </div><div class="line">    //分享按钮</div><div class="line">    self.shareBargainBtn = [[UIButton alloc] init];</div><div class="line">    self.shareBargainBtn.layer.cornerRadius = 4.f;</div><div class="line">    self.shareBargainBtn.titleLabel.font = [UIFont pingFangRegularFontOfSize:kHeight(30)];</div><div class="line">    self.shareBargainBtn.backgroundColor = RGB_HEX(0xcc5253);</div><div class="line">    [self.shareBargainBtn setTitle:@&quot;分享砍价&quot; forState:UIControlStateNormal];</div><div class="line">    [self.bottomView addSubview:self.shareBargainBtn];</div><div class="line">    </div><div class="line">    //立即使用</div><div class="line">    self.useBtn = [[UIButton alloc] init];</div><div class="line">    self.useBtn.layer.cornerRadius = 4.f;</div><div class="line">    self.useBtn.layer.borderColor = RGB_HEX(0xb4282d).CGColor;</div><div class="line">    self.useBtn.layer.borderWidth = 1.f;</div><div class="line">    self.useBtn.titleLabel.font = [UIFont pingFangRegularFontOfSize:kHeight(30)];</div><div class="line">    [self.useBtn setTitle:@&quot;立即使用&quot; forState:UIControlStateNormal];</div><div class="line">    [self.useBtn setTitleColor:RGB_HEX(0xb4282d) forState:UIControlStateNormal];</div><div class="line">    [self.bottomView addSubview:self.useBtn];</div><div class="line">    </div><div class="line">    //约束</div><div class="line">    [self.bottomView makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">        </div><div class="line">        if (@available(iOS 11.0, *)) &#123;</div><div class="line">            make.left.equalTo(self.view.safeAreaLayoutGuideLeft).offset(0);</div><div class="line">            make.right.equalTo(self.view.safeAreaLayoutGuideRight).offset(0);</div><div class="line">            make.bottom.equalTo(self.view.safeAreaLayoutGuideBottom).offset(0);</div><div class="line">        &#125; else &#123;</div><div class="line">            // Fallback on earlier versions</div><div class="line">            make.left.right.bottom.equalTo(self.view);</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        make.height.equalTo(73);</div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">    [self.table makeConstraints:^(MASConstraintMaker *make) &#123;</div><div class="line">        </div><div class="line">        if (@available(iOS 11.0, *)) &#123;</div><div class="line">            make.left.equalTo(self.view.safeAreaLayoutGuideLeft).offset(0);</div><div class="line">            make.right.equalTo(self.view.safeAreaLayoutGuideRight).offset(0);</div><div class="line">            make.top.equalTo(self.view.safeAreaLayoutGuideTop).offset(0);</div><div class="line">            </div><div class="line">        &#125; else &#123;</div><div class="line">            // Fallback on earlier versions</div><div class="line">            make.left.right.top.equalTo(self.view);</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        make.bottom.equalTo(self.bottomView.top).offset(0);</div><div class="line">    &#125;];</div><div class="line">    </div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br>UITableViewHeaderFooterView代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">static NSString * headerViewStr = @&quot;VCBargainHeaderView&quot;;</div><div class="line">- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section &#123;</div><div class="line">    </div><div class="line">    VCBargainHeaderView * bargainHeaderView = [tableView dequeueReusableHeaderFooterViewWithIdentifier:headerViewStr];</div><div class="line">    </div><div class="line">    if (bargainHeaderView == nil) &#123;</div><div class="line">        bargainHeaderView = (VCBargainHeaderView *)[[UITableViewHeaderFooterView alloc] initWithReuseIdentifier:headerViewStr];</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    [bargainHeaderView setModel:self.viewModel.couponItem];</div><div class="line">    </div><div class="line">    //砍价人数</div><div class="line">    bargainHeaderView.bargainNumLabel.text = [NSString stringWithFormat:@&quot;砍价好友(%d)&quot;,self.viewModel.cutPriceList.count];</div><div class="line">    </div><div class="line">    return bargainHeaderView;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br>运行后约束报错<br><br><div align="center"><br><br><img src="http://ojgg6fpio.bkt.clouddn.com/5F77FAD1-DE9E-419C-A367-8D3F7284E648.png" alt="image"><br><br></div>

<h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>解决方法1：</p>
<div align="center"><br><br>异常代码（约束报错）<br><img src="http://ojgg6fpio.bkt.clouddn.com/67BBB6D7-1D28-48C1-A201-198668CF7D63.png" alt="image"><br><br>正常代码（约束不报错）<br><img src="http://ojgg6fpio.bkt.clouddn.com/1C550D68-D438-4992-915E-3BDF65088405.png" alt="image"><br><br></div>

<p>找到与UITableViewHeaderFooterView底部有约束的控件将他与底部的约束优先级改低。如上图（正常代码）所示 即可解决问题</p>
<p>2、解决方法2（网上看到的，亲测无效）：</p>
<blockquote>
<p>使用UITableView的header或footer复用时，如果采用自动布局，你会发现有约束冲突，下面这样写可以消除约束冲突：<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line"> #import &lt;UIKit/UIKit.h&gt;</div><div class="line"> </div><div class="line"> @interface SectionView : UITableViewHeaderFooterView</div><div class="line"> </div><div class="line"> @property (nonatomic, copy) NSString *sectionTitle;</div><div class="line"> </div><div class="line"> @end</div><div class="line"> </div><div class="line"> #import &quot;SectionView.h&quot;</div><div class="line"> </div><div class="line"> @interface SectionView ()</div><div class="line"> &#123;</div><div class="line">     UIImageView *titleBgImageView;</div><div class="line">     UIImageView *timePonitImageView;</div><div class="line">     UIImageView *circleImageView;</div><div class="line">     UILabel *titleLabe;</div><div class="line"> &#125;</div><div class="line"> @end</div><div class="line"> </div><div class="line"> @implementation SectionView</div><div class="line"> </div><div class="line"> // 带有复用</div><div class="line"> - (instancetype)initWithReuseIdentifier:(NSString *)reuseIdentifier</div><div class="line"> &#123;</div><div class="line">     self = [super initWithReuseIdentifier:reuseIdentifier];</div><div class="line">     if (self) &#123;</div><div class="line">         [self createUI];</div><div class="line">     &#125;</div><div class="line">     return self;</div><div class="line"> &#125;</div><div class="line"> </div><div class="line"> </div><div class="line"> - (void)createUI</div><div class="line"> &#123;</div><div class="line">     titleBgImageView = [[UIImageView alloc] initForAutoLayout];</div><div class="line">     titleBgImageView.userInteractionEnabled = NO;</div><div class="line">     UIImage *image = [UIImage imageNamed:@&quot;event_bottom_line&quot;];</div><div class="line">     image = [image stretchableImageWithLeftCapWidth:image.size.width*0.5 topCapHeight:image.size.height*0.5];</div><div class="line">     titleBgImageView.image = image;</div><div class="line">     [self.contentView addSubview:titleBgImageView];</div><div class="line">     </div><div class="line">     </div><div class="line">     circleImageView = [[UIImageView alloc] initForAutoLayout];</div><div class="line">     UIImage *circleImage = [UIImage imageNamed:@&quot;event_blue1&quot;];</div><div class="line">     circleImage = [circleImage stretchableImageWithLeftCapWidth:circleImage.size.width*0.5 topCapHeight:circleImage.size.height*0.5];</div><div class="line">     </div><div class="line">     circleImageView.image = circleImage;</div><div class="line">     [self.contentView addSubview:circleImageView];</div><div class="line"> </div><div class="line">     </div><div class="line">     timePonitImageView = [[UIImageView alloc] initForAutoLayout];</div><div class="line">     timePonitImageView.image = [UIImage imageNamed:@&quot;event_write_line&quot;];</div><div class="line">     [self.contentView addSubview:timePonitImageView];</div><div class="line">     </div><div class="line">     </div><div class="line">     titleLabe = [[UILabel alloc] initForAutoLayout];</div><div class="line">     titleLabe.font = [UIFont systemFontOfSize:13];</div><div class="line">     titleLabe.textColor = [UIColor whiteColor];</div><div class="line">     titleLabe.textAlignment = NSTextAlignmentCenter;</div><div class="line">     [circleImageView addSubview:titleLabe];</div><div class="line">    </div><div class="line">&#125;</div><div class="line">&gt; </div><div class="line">&gt; 把布局代码写到这里</div><div class="line"> - (void)layoutSubviews</div><div class="line"> &#123;</div><div class="line">     [super layoutSubviews];</div><div class="line">     </div><div class="line">     [titleBgImageView autoPinEdgesToSuperviewEdgesWithInsets:UIEdgeInsetsMake(0, 0, 0, 0)];</div><div class="line">     </div><div class="line">     [circleImageView autoPinEdgeToSuperviewEdge:ALEdgeLeading withInset:8];</div><div class="line">     [circleImageView autoPinEdgeToSuperviewEdge:ALEdgeTrailing withInset:8];</div><div class="line">     [circleImageView autoSetDimension:ALDimensionHeight toSize:23];</div><div class="line">     [circleImageView autoAlignAxisToSuperviewAxis:ALAxisHorizontal];</div><div class="line">    </div><div class="line">    [timePonitImageView autoPinEdgeToSuperviewEdge:ALEdgeLeading withInset:16];</div><div class="line">     [timePonitImageView autoPinEdgeToSuperviewEdge:ALEdgeTop withInset:39/2.0-4];</div><div class="line">    [timePonitImageView autoSetDimensionsToSize:CGSizeMake(9, 23.5)];</div><div class="line">    </div><div class="line">     [titleLabe autoCenterInSuperview];</div><div class="line">     [titleLabe autoSetDimension:ALDimensionWidth toSize:200];</div><div class="line">    </div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<p>该代码来自csdn用户王素燕的博客<a href="https://blog.csdn.net/u010618987/article/details/46744689" target="_blank" rel="external">《UITableViewHeaderFooterView的使用+自动布局》</a>。侵删！</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;div align=center&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;http://ojgg6fpio.bkt.clouddn.com/ios7_dev.png&quot; alt=&quot;image&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h1 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h1&gt;&lt;p&gt;近期在开发偶遇优选2.0时遇到一个奇葩问题：UITableViewHeaderFooterView使用autolayout时报约束异常，但显示上一切正常。经过一番排查，约束并无冲突。网上有看到说因为使用了复用才会出现这问题，这里并不是通过取消复用来解决此问题。虽问题解决，但甚是不解。望大神答疑解惑。&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://www.wangquanwei.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS Share Extensions开发教程</title>
    <link href="http://www.wangquanwei.com/2018-03-31-1.html"/>
    <id>http://www.wangquanwei.com/2018-03-31-1.html</id>
    <published>2018-03-31T02:55:08.000Z</published>
    <updated>2018-06-23T01:16:41.079Z</updated>
    
    <content type="html"><![CDATA[<div align="center"><br><br><img src="http://ojgg6fpio.bkt.clouddn.com/2018060110133445277.jpg" alt="image"><br><br></div>

<h1 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h1><blockquote>
<p>extension是iOS8新开放的一种对几个固定系统区域的扩展机制，它可以在一定程度上弥补iOS的沙盒机制对应用间通信的限制。  </p>
</blockquote>
<a id="more"></a>
<h1 id="app-extensions使用限制"><a href="#app-extensions使用限制" class="headerlink" title="app extensions使用限制"></a>app extensions使用限制</h1><p>一个app extension不能有以下情况：</p>
<p>1.访问sharedApplication对象</p>
<p>2.使用任何标记NS_EXTENSION_UNAVAILABLE宏的API，或者类似的宏，或者不可用framework里面的API，例如HealthKit framework不能用于app extensions</p>
<p>3.iOS设备访问相机或者麦克风（iMessage app可以访问这些资源，只要在Info.plist里面进行配置使用描述即可）</p>
<p>4.运行一个长时间的后台任务（根据不同平台而异）</p>
<p>5.使用AirDrop接收数据</p>
<h1 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h1><p>注：share extensions不能单独存在，必须依赖于主体工程。因此在此之前需要先创建个项目，如何创建项目这里不再叙述。</p>
<h3 id="创建share-extensions"><a href="#创建share-extensions" class="headerlink" title="创建share extensions"></a>创建share extensions</h3><p>File-&gt;New-&gt;Targets-&gt;Share Extension<br><img src="http://ojgg6fpio.bkt.clouddn.com/F97F9BEA-207F-4F17-90EF-60D763F5DE1E.png" alt="image"></p>
<p><img src="http://ojgg6fpio.bkt.clouddn.com/AFDAC595-3F55-440F-AD91-8D47D08F3C3A.png" alt="image"></p>
<p><img src="http://ojgg6fpio.bkt.clouddn.com/93644182-2326-4754-8DF4-80B52777FF24.png" alt="image"></p>
<p><img src="http://ojgg6fpio.bkt.clouddn.com/1BEA5E6D-6307-4CC2-929E-18E32D4F2CBC.png" alt="image"></p>
<h1 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h1><p>现在我们可以运行项目看看效果了。iOS给我们提供了一个默认的UI样式，我们可以根据实际需求自定义UI和功能。<br><img src="http://ojgg6fpio.bkt.clouddn.com/62E81076-F30C-4F4A-AE2E-7E034654433B.png" alt="image">  </p>
<p>这里以简书为例<br>简书-&gt;任意文章打开-&gt;分享-&gt;更多  </p>
<p>信息那一栏滑动就可以看到我们建的share extension了<br><img src="http://ojgg6fpio.bkt.clouddn.com/D04479FE3618CC43E5918D67A08375DE.png" alt="image"></p>
<p>点击我们创建的share extension 这就是默认效果<br><img src="http://ojgg6fpio.bkt.clouddn.com/69C012F4DC8FB1C32E89F70B9E1ED4D6.png" alt="image"></p>
<h1 id="配置-share-extension-info-plist"><a href="#配置-share-extension-info-plist" class="headerlink" title="配置 share extension info.plist"></a>配置 share extension info.plist</h1><blockquote>
<p>Bundle display name</p>
<p>扩展的显示名称，默认跟你的项目名称相同，可以通过修改此字段来控制扩展的显示名称。</p>
<p>NSExtension</p>
<p>扩展描述字段，用于描述扩展的属性、设置等。作为一个扩展项目必须要包含此字段。</p>
<p>NSExtensionAttributes</p>
<p>扩展属性集合字段。用于描述扩展的属性。</p>
<p>NSExtensionActivationRule</p>
<p>激活扩展的规则。默认为字符串“TRUEPREDICATE”，表示在分享菜单中一直显示该扩展。可以将类型改为Dictionary类型，然后添加以下字段：</p>
<p>NSExtensionActivationSupportsAttachmentsWithMaxCount</p>
<p>NSExtensionActivationSupportsAttachmentsWithMinCount</p>
<p>NSExtensionActivationSupportsImageWithMaxCount</p>
<p>NSExtensionActivationSupportsMovieWithMaxCount</p>
<p>NSExtensionActivationSupportsWebPageWithMaxCount</p>
<p>NSExtensionActivationSupportsWebURLWithMaxCount</p>
<p>NSExtensionMainStoryboard</p>
<p>设置主界面的Storyboard，如果不想使用storyboard，也可以使用NSExtensionPrincipalClass指定自定义UIViewController子类名</p>
<p>NSExtensionPointIdentifier</p>
<p>扩展标识，在分享扩展中为：com.Apple.share-services</p>
<p>NSExtensionPrincipalClass</p>
<p>自定义UI的类名</p>
<p>NSExtensionActivationSupportsAttachmentsWithMaxCount</p>
<p>附件最多限制，为数值类型。附件包括File、Image和Movie三大类，单一、混选总量不超过指定数量</p>
<p>NSExtensionActivationSupportsAttachmentsWithMinCount</p>
<p>附件最少限制，为数值类型。当设置NSExtensionActivationSupportsAttachmentsWithMaxCount时生效，默认至少选择1个附件，分享菜单中才显示扩展插件图标。</p>
<p>NSExtensionActivationSupportsFileWithMaxCount</p>
<p>文件最多限制，为数值类型。文件泛指除Image/Movie之外的附件，例如【邮件】附件、【语音备忘录】等。</p>
<p>单一、混选均不超过指定数量。</p>
<p> NSExtensionActivationSupportsImageWithMaxCount</p>
<p>图片最多限制，为数值类型。单一、混选均不超过指定数量。</p>
<p>NSExtensionActivationSupportsMovieWithMaxCount</p>
<p>视频最多限制，为数值类型。单一、混选均不超过指定数量。</p>
<p>NSExtensionActivationSupportsText</p>
<p>是否支持文本类型，布尔类型，默认不支持。如【备忘录】的分享</p>
<p>NSExtensionActivationSupportsWebURLWithMaxCount</p>
<p>Web链接最多限制，为数值类型。默认不支持分享超链接，需要自己设置一个数值。</p>
<p>NSExtensionActivationSupportsWebPageWithMaxCount</p>
<p>Web页面最多限制，为数值类型。默认不支持Web页面分享，需要自己设置一个数值。</p>
</blockquote>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><h4 id="1、使用storyboard创建UI"><a href="#1、使用storyboard创建UI" class="headerlink" title="1、使用storyboard创建UI"></a>1、使用storyboard创建UI</h4><p>找到share extension的info.plist-&gt;展开NSExtension-&gt;新增key NSExtensionMainStoryboard value MainInterface(即storyboard名称)<br>如果没有修改，键值默认就存在<br><img src="http://ojgg6fpio.bkt.clouddn.com/14594842-3F45-4CD6-A90A-E9F25DC046DE.png" alt="image"></p>
<h4 id="2、使用代码创建界面"><a href="#2、使用代码创建界面" class="headerlink" title="2、使用代码创建界面"></a>2、使用代码创建界面</h4><p>找到share extension的info.plist-&gt;展开NSExtension-&gt;将NSExtensionMainStoryboard这行删掉  </p>
<p>在NSExtension里新增key:NSExtensionPrincipalClass value: 自定义ViewController类名<br><img src="http://ojgg6fpio.bkt.clouddn.com/A8D93D54-B746-45E2-AB49-57A8204E2595.png" alt="image"></p>
<h1 id="自定义UI、自定义功能"><a href="#自定义UI、自定义功能" class="headerlink" title="自定义UI、自定义功能"></a>自定义UI、自定义功能</h1><p>创建完share extension时会默认创建一个ShareViewController的类，它继承于SLComposeServiceViewController</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#import &lt;UIKit/UIKit.h&gt;</div><div class="line">#import &lt;Social/Social.h&gt;</div><div class="line"></div><div class="line">@interface ShareViewController : SLComposeServiceViewController</div><div class="line"></div><div class="line">@end</div></pre></td></tr></table></figure>
<p>我们在做自定义时可以把他删掉自己重新建个类或者直接拿默认的修改，这里仅拿默认的修改。  </p>
<p>将ShareViewController的继承改成UIViewController,因为我们需要自定义UI，使用SLComposeServiceViewController无法显示自定义UI。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#import &lt;UIKit/UIKit.h&gt;</div><div class="line">#import &lt;Social/Social.h&gt;</div><div class="line"></div><div class="line">@interface ShareViewController : UIViewController</div><div class="line"></div><div class="line">@end</div></pre></td></tr></table></figure>
<p>获取别的app传过来的数据 NSExtensionContext是UIViewController里的属性，可以直接使用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">// Returns the extension context. Also acts as a convenience method for a view controller to check if it participating in an extension request.</div><div class="line">@property (nullable, nonatomic,readonly,strong) NSExtensionContext *extensionContext NS_AVAILABLE_IOS(8_0);</div></pre></td></tr></table></figure>
<p>通过遍历的形式来获取我们需要的数据,这里获取URL<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">__block BOOL hasGetUrl = NO;</div><div class="line">[self.extensionContext.inputItems enumerateObjectsUsingBlock:^(NSExtensionItem *  _Nonnull extensionItem, NSUInteger idx, BOOL * _Nonnull stop) &#123;</div><div class="line">    </div><div class="line">    [extensionItem.attachments enumerateObjectsUsingBlock:^(id  _Nonnull itemProvider, NSUInteger idx, BOOL * _Nonnull stop) &#123;</div><div class="line">        </div><div class="line">        if ([itemProvider hasItemConformingToTypeIdentifier:@&quot;public.url&quot;])</div><div class="line">        &#123;</div><div class="line">            [itemProvider loadItemForTypeIdentifier:@&quot;public.url&quot; options:nil completionHandler:^(id&lt;NSSecureCoding&gt;  _Nullable item, NSError * _Null_unspecified error) &#123;</div><div class="line">                </div><div class="line">                if ([(NSObject *)item isKindOfClass:[NSURL class]])</div><div class="line">                &#123;</div><div class="line">                    NSURL * url = (NSURL *)item;</div><div class="line">                    dispatch_async(dispatch_get_main_queue(), ^&#123;</div><div class="line">                        </div><div class="line">                        NSURLRequest * request = [NSURLRequest requestWithURL:url];</div><div class="line">                        [self.webView loadRequest:request];</div><div class="line">                    &#125;);</div><div class="line">                &#125;</div><div class="line">                </div><div class="line">            &#125;];</div><div class="line">            </div><div class="line">            hasGetUrl = YES;</div><div class="line">            *stop = YES;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        *stop = hasGetUrl;</div><div class="line">        </div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">&#125;];</div></pre></td></tr></table></figure></p>
<p>退出share extension<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">NSError * error = [NSError errorWithDomain:@&quot;GankIOExtension&quot; code:NSUserCancelledError userInfo:nil];</div><div class="line">[self.extensionContext cancelRequestWithError:error];</div></pre></td></tr></table></figure></p>
<p>如果存在网络请求，且非https，请在info.plist里添加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;key&gt;NSAppTransportSecurity&lt;/key&gt;</div><div class="line">&lt;dict&gt;</div><div class="line">	&lt;key&gt;NSAllowsArbitraryLoads&lt;/key&gt;</div><div class="line">	&lt;true/&gt;</div><div class="line">&lt;/dict&gt;</div></pre></td></tr></table></figure>
<h4 id="剩下的该怎么玩就怎么玩，和正常的创建页面，处理逻辑一样"><a href="#剩下的该怎么玩就怎么玩，和正常的创建页面，处理逻辑一样" class="headerlink" title="剩下的该怎么玩就怎么玩，和正常的创建页面，处理逻辑一样"></a>剩下的该怎么玩就怎么玩，和正常的创建页面，处理逻辑一样</h4><h1 id="使用cocoapods"><a href="#使用cocoapods" class="headerlink" title="使用cocoapods"></a>使用cocoapods</h1><p>正常情况下我们是无法在Share extension里使用cocoapods的库的，所以我们需要配置一下。这样就可以在extension里使用cocoapods的库啦<br><img src="http://ojgg6fpio.bkt.clouddn.com/4446854F-FC9C-42CB-A9B5-E2EEBB7E9FCE.png" alt="image"></p>
<h1 id="代码共享"><a href="#代码共享" class="headerlink" title="代码共享"></a>代码共享</h1><p>有时候我们想使用主体项目里的一些封装好的方法，例如category之类的，但是不能使用。  </p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>1、拷贝一份代码到share extension（太sb）<br>2、使用framework来共享代码（推荐）</p>
<p>这里使用方法2来实现代码共享，具体如下：  </p>
<h4 id="1、创建framework"><a href="#1、创建framework" class="headerlink" title="1、创建framework"></a>1、创建framework</h4><p>File-&gt;New-&gt;Targets-Cocoa Touch Framework<br><img src="http://ojgg6fpio.bkt.clouddn.com/5D8B4E2D-DFD8-4851-86AC-7CA436B6027F.png" alt="image"></p>
<h4 id="2、添加类到framework"><a href="#2、添加类到framework" class="headerlink" title="2、添加类到framework"></a>2、添加类到framework</h4><p>我们选择需要共享的类，将其添加到framework里  </p>
<p>选中.h文件<br><img src="http://ojgg6fpio.bkt.clouddn.com/2033F15A-3172-42C7-A8A4-07BC84A99E7E.png" alt="image"></p>
<p>选中.m文件<br><img src="http://ojgg6fpio.bkt.clouddn.com/21CEE27F-0AC7-4F61-8C93-5C9353A3B59B.png" alt="image"></p>
<p>找到framework文件夹里的.h文件，将共享的类的头文件添加进去<br><img src="http://ojgg6fpio.bkt.clouddn.com/D4CA10C4-F07D-4BB5-946B-C4AC33E91FF4.png" alt="image"></p>
<p>公开头文件<br><img src="http://ojgg6fpio.bkt.clouddn.com/A7F23627-08FD-41C1-8E06-5B1332A2DEB5.png" alt="image"></p>
<h3 id="最最最重要一步"><a href="#最最最重要一步" class="headerlink" title="最最最重要一步"></a>最最最重要一步</h3><p>将framework添加到share extension里<br><img src="http://ojgg6fpio.bkt.clouddn.com/B17CE0C8-1F03-4973-B39E-74422D0360BC.png" alt="image"></p>
<h3 id="请遵守app-extensions使用限制"><a href="#请遵守app-extensions使用限制" class="headerlink" title="请遵守app extensions使用限制"></a>请遵守app extensions使用限制</h3><h1 id="发布（此处有坑）"><a href="#发布（此处有坑）" class="headerlink" title="发布（此处有坑）"></a>发布（此处有坑）</h1><p><img src="http://ojgg6fpio.bkt.clouddn.com/A8212F64-4CC0-4A70-B9DF-260BBA19988B.png" alt="image"></p>
<h3 id="1、ERROR-ITMS-90362-“Invalid-Info-plist-value-The-value-for-the-key-‘NSExtensionActivationRule’-in-bundle-xxxxx-is-invalid-Please-refer-to-the-App-Extension-Programming-Guide-on-https-developer-apple-com“"><a href="#1、ERROR-ITMS-90362-“Invalid-Info-plist-value-The-value-for-the-key-‘NSExtensionActivationRule’-in-bundle-xxxxx-is-invalid-Please-refer-to-the-App-Extension-Programming-Guide-on-https-developer-apple-com“" class="headerlink" title="1、ERROR ITMS-90362: “Invalid Info.plist value. The value for the key ‘NSExtensionActivationRule’ in bundle      xxxxx is invalid. Please refer to the App Extension Programming Guide on https://developer.apple.com“"></a>1、ERROR ITMS-90362: “Invalid Info.plist value. The value for the key ‘NSExtensionActivationRule’ in bundle      xxxxx is invalid. Please refer to the App Extension Programming Guide on <a href="https://developer.apple.com" target="_blank" rel="external">https://developer.apple.com</a>“</h3><p>NSExtensionAttributes的默认值是“TRUEPREDICATE”这是供给我们开发时使用的。我们发布时需要对该字段进行修改。</p>
<p><img src="http://ojgg6fpio.bkt.clouddn.com/5348B5B7-7063-4245-88DE-F9A12E49368D.png" alt="image"></p>
<p>例如，要声明您的共享扩展可以支持多达十个图像，一个电影和一个网页URL，您可以使用以下字典来获取该NSExtensionAttributes键的值：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;key&gt;NSExtensionAttributes&lt;/key&gt;</div><div class="line">&lt;dict&gt;</div><div class="line">    &lt;key&gt;NSExtensionActivationRule&lt;/key&gt;</div><div class="line">    &lt;dict&gt;</div><div class="line">        &lt;key&gt;NSExtensionActivationSupportsImageWithMaxCount&lt;/key&gt;</div><div class="line">        &lt;integer&gt;10&lt;/integer&gt;</div><div class="line">        &lt;key&gt;NSExtensionActivationSupportsMovieWithMaxCount&lt;/key&gt;</div><div class="line">        &lt;integer&gt;1&lt;/integer&gt;</div><div class="line">        &lt;key&gt;NSExtensionActivationSupportsWebURLWithMaxCount&lt;/key&gt;</div><div class="line">        &lt;integer&gt;1&lt;/integer&gt;</div><div class="line">    &lt;/dict&gt;</div><div class="line">&lt;/dict&gt;</div></pre></td></tr></table></figure></p>
<p>如果您不支持特定的数据类型，请使用0相应密钥的值或从NSExtensionActivationRule字典中删除密钥。</p>
<h3 id="2、WARNING-ITMS-90473-“CFBundleShortVersionString-Mismatch-The-CFBundleShortVersionString-value-‘1-0’-of-extension-xxxxx-does-not-match-the-CFBundleShortVersionString-value-‘1-1-3’-of-its-containing-iOS-application-‘Gank-io-app’-”"><a href="#2、WARNING-ITMS-90473-“CFBundleShortVersionString-Mismatch-The-CFBundleShortVersionString-value-‘1-0’-of-extension-xxxxx-does-not-match-the-CFBundleShortVersionString-value-‘1-1-3’-of-its-containing-iOS-application-‘Gank-io-app’-”" class="headerlink" title="2、WARNING ITMS-90473: “CFBundleShortVersionString Mismatch. The CFBundleShortVersionString value ‘1.0’ of extension xxxxx does not match the CFBundleShortVersionString value ‘1.1.3’ of its containing iOS application ‘Gank.io.app’.”"></a>2、WARNING ITMS-90473: “CFBundleShortVersionString Mismatch. The CFBundleShortVersionString value ‘1.0’ of extension xxxxx does not match the CFBundleShortVersionString value ‘1.1.3’ of its containing iOS application ‘Gank.io.app’.”</h3><p>这里要求extension的Version和Build版本号要与主体工程的版本号一致</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://developer.apple.com/library/content/documentation/General/Conceptual/ExtensibilityPG/ExtensionScenarios.html#//apple_ref/doc/uid/TP40014214-CH21-SW8" target="_blank" rel="external">https://developer.apple.com/library/content/documentation/General/Conceptual/ExtensibilityPG/ExtensionScenarios.html#//apple_ref/doc/uid/TP40014214-CH21-SW8</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;div align=center&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;http://ojgg6fpio.bkt.clouddn.com/2018060110133445277.jpg&quot; alt=&quot;image&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h1 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;extension是iOS8新开放的一种对几个固定系统区域的扩展机制，它可以在一定程度上弥补iOS的沙盒机制对应用间通信的限制。  &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://www.wangquanwei.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>今日干货--干货集中营iOS客户端现已加入App Store豪华午餐</title>
    <link href="http://www.wangquanwei.com/2018-03-13-1.html"/>
    <id>http://www.wangquanwei.com/2018-03-13-1.html</id>
    <published>2018-03-13T02:46:08.000Z</published>
    <updated>2018-06-23T01:16:41.078Z</updated>
    
    <content type="html"><![CDATA[<div align="center"><br><br><img src="http://ojgg6fpio.bkt.clouddn.com/gank.io-1.png" alt="gank.io"><br><br></div>

<h1 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h1><p>2016年1月11日订阅干货集中营，没翻邮件我自己都忘了。<br>从开始的每天中午一更到现在佛系更新，一路见证了干货集中营的发展历程。</p>
<a id="more"></a>
<h1 id="Gank"><a href="#Gank" class="headerlink" title="Gank"></a>Gank</h1><p>作为干货集中营的老粉丝、老用户，今天带来一款全新的 <a href="http://gank.io/" target="_blank" rel="external">gank.io</a> iOS客户端–今日干货<br><img src="http://ojgg6fpio.bkt.clouddn.com/gankio_1024.png" alt="image">  </p>
<h1 id="数据来源"><a href="#数据来源" class="headerlink" title="数据来源"></a>数据来源</h1><p>今日干货所有数据均来自干货集中营的开放的API。</p>
<h1 id="界面预览"><a href="#界面预览" class="headerlink" title="界面预览"></a>界面预览</h1><h3 id="首页–最新一期的干货"><a href="#首页–最新一期的干货" class="headerlink" title="首页–最新一期的干货"></a>首页–最新一期的干货</h3><p><img src="http://ojgg6fpio.bkt.clouddn.com/gank.io-2.png" alt="image">  </p>
<h3 id="历史–往期所有干货列表缩略"><a href="#历史–往期所有干货列表缩略" class="headerlink" title="历史–往期所有干货列表缩略"></a>历史–往期所有干货列表缩略</h3><p><img src="http://ojgg6fpio.bkt.clouddn.com/gank.io-4.png" alt="image">  </p>
<h3 id="萌妹子–妹子图啦"><a href="#萌妹子–妹子图啦" class="headerlink" title="萌妹子–妹子图啦"></a>萌妹子–妹子图啦</h3><p><img src="http://ojgg6fpio.bkt.clouddn.com/gank.io-3.png" alt="image">  </p>
<h3 id="我的–乱七八糟的东西"><a href="#我的–乱七八糟的东西" class="headerlink" title="我的–乱七八糟的东西"></a>我的–乱七八糟的东西</h3><p><img src="http://ojgg6fpio.bkt.clouddn.com/gank.io-5.png" alt="image"></p>
<h1 id="奇怪的技术应用"><a href="#奇怪的技术应用" class="headerlink" title="奇怪的技术应用"></a>奇怪的技术应用</h1><h3 id="Trochilus-–-免sdk实现分享、登录、支付"><a href="#Trochilus-–-免sdk实现分享、登录、支付" class="headerlink" title="Trochilus – 免sdk实现分享、登录、支付"></a>Trochilus – 免sdk实现分享、登录、支付</h3><p>应用于历史-分享<br><a href="https://github.com/quanweiwang/Trochilus" target="_blank" rel="external">https://github.com/quanweiwang/Trochilus</a></p>
<h3 id="支付宝打赏-–-免sdk、免扫码打开支付宝付款界面"><a href="#支付宝打赏-–-免sdk、免扫码打开支付宝付款界面" class="headerlink" title="支付宝打赏 – 免sdk、免扫码打开支付宝付款界面"></a>支付宝打赏 – 免sdk、免扫码打开支付宝付款界面</h3><p>应用于我的-打赏  </p>
<h3 id="打开新浪微博个人中心页面-–-免sdk实现app跳转到新浪微博指定用户个人中心页面"><a href="#打开新浪微博个人中心页面-–-免sdk实现app跳转到新浪微博指定用户个人中心页面" class="headerlink" title="打开新浪微博个人中心页面 – 免sdk实现app跳转到新浪微博指定用户个人中心页面"></a>打开新浪微博个人中心页面 – 免sdk实现app跳转到新浪微博指定用户个人中心页面</h3><p>应用于我的-系统设置-关于-We are 伐 ~ 木 ~ 累 ~</p>
<h1 id="第三方开源库"><a href="#第三方开源库" class="headerlink" title="第三方开源库"></a>第三方开源库</h1><h3 id="感谢，今日干货的制作离不开以下这些框架开发者！"><a href="#感谢，今日干货的制作离不开以下这些框架开发者！" class="headerlink" title="感谢，今日干货的制作离不开以下这些框架开发者！"></a>感谢，今日干货的制作离不开以下这些框架开发者！</h3><p><a href="https://github.com/AFNetworking/AFNetworking" target="_blank" rel="external">AFNetworking </a><br><a href="https://github.com/BlocksKit/BlocksKit" target="_blank" rel="external">BlocksKit</a><br><a href="https://github.com/Flipboard/FLAnimatedImage" target="_blank" rel="external">FLAnimatedImage</a><br><a href="https://github.com/hackiftekhar/IQKeyboardManager" target="_blank" rel="external">IQKeyboardManager</a><br><a href="https://github.com/SnapKit/Masonry" target="_blank" rel="external">Masonry</a><br><a href="https://github.com/jdg/MBProgressHUD" target="_blank" rel="external">MBProgressHUD</a><br><a href="https://github.com/CoderMJLee/MJExtension" target="_blank" rel="external">MJExtension </a><br><a href="https://github.com/CoderMJLee/MJRefresh" target="_blank" rel="external">MJRefresh</a><br><a href="https://github.com/maccman/SDWebImage" target="_blank" rel="external">SDWebImage</a><br><a href="https://github.com/banchichen/TZImagePickerController" target="_blank" rel="external">TZImagePickerController</a><br><a href="https://github.com/wangrui460/WRNavigationBar" target="_blank" rel="external">WRNavigationBar</a><br><a href="https://github.com/CoderXLLau/XLPhotoBrowser" target="_blank" rel="external">XLPhotoBrowser+CoderXL</a></p>
<h1 id="审核过程"><a href="#审核过程" class="headerlink" title="审核过程"></a>审核过程</h1><h3 id="一次被拒"><a href="#一次被拒" class="headerlink" title="一次被拒"></a>一次被拒</h3><p>Your app includes content that many users would find objectionable and offensive. Specifically, your 萌妹子 section is objectifying females.</p>
<p>Please see attached screenshots for details.</p>
<p>Next Steps</p>
<p>To resolve this issue, please remove all potentially objectionable content from your app and submit your revised binary for review.</p>
<p>For app design information, check out the following videos: and “Designing Intuitive User Experiences,” available on the Apple Developer website.</p>
<p>You may also want to review the iOS Human Interface Guidelines for more information on how to create a great user experience in your app.  </p>
<p>你的应用程序包含了很多用户会觉得讨厌和冒犯的内容。具体地说,你的萌妹子部分是物化女性。</p>
<p>详情请见附件截图。</p>
<p>下一个步骤</p>
<p>为了解决这个问题，请从您的应用程序中删除所有潜在的不良内容，并提交您的修订后的二进制文件进行审查。</p>
<p>对于应用程序设计信息，请查看以下视频:“设计直观的用户体验”，可以在苹果开发者网站上找到。</p>
<p>你可能还想回顾一下iOS的人机界面指南，了解更多关于如何在你的应用程序中创建优秀用户体验的信息。</p>
<h3 id="二次被拒"><a href="#二次被拒" class="headerlink" title="二次被拒"></a>二次被拒</h3><blockquote>
<p>忘记改截图了  </p>
</blockquote>
<p>We noticed that your screenshots do not sufficiently reflect your app in use.</p>
<p>Please see attached screenshots for details.</p>
<p>Next Steps</p>
<p>To resolve this issue, please revise your screenshots to ensure that they accurately reflect the app in use on the supported devices. For iPhone, you need a set of 5.5-inch display screenshots and for iPad, you need a set for 12.9-inch display. This set will be scaled appropriately down to other device sizes when viewed on the App Store in each territory.</p>
<p>Resources</p>
<p>For resources on creating great screenshots for the App Store, you may want to review the App Store Product Page information available on the Apple developer portal.</p>
<p>Please ensure you have made any screenshot modifications using Media Manager. You should confirm your app looks and behaves identically in all languages and on all supported devices. Learn how to use Media Manager to add custom screenshots for each display size and localization.</p>
<p>Since your iTunes Connect status is Metadata Rejected, we do NOT require a new binary. To revise the metadata, visit iTunes Connect to select your app and revise the desired metadata values. Once you’ve completed all changes, reply to this message in Resolution Center and we will continue the review.</p>
<p>NOTE: Please be sure to make any metadata changes to all app localizations by selecting each specific localization and making appropriate changes.  </p>
<p>我们注意到你的截图没有充分反映你的应用。</p>
<p>详情请见附件截图。</p>
<p>下一个步骤</p>
<p>为了解决这个问题，请修改您的截图，以确保它们能够准确地反映所支持设备上的应用程序。对于iPhone，你需要一套5.5英寸的屏幕截图和iPad，你需要一套12.9英寸的显示屏。当在每个区域的App Store上查看时，这个集合将被适当地缩小到其他设备大小。</p>
<p>资源</p>
<p>对于为应用程序商店创建大屏幕快照的资源，您可能想要查看苹果开发门户网站上可用的App Store产品页面信息。</p>
<p>请确保您使用媒体管理器进行了任何屏幕截图修改。您应该在所有语言和所有支持的设备上确认您的应用程序的外观和行为。学习如何使用媒体管理器为每个显示大小和本地化添加自定义屏幕截图。</p>
<p>由于您的iTunes Connect状态被拒绝，所以我们不需要新的二进制文件。要修改元数据，请访问iTunes Connect，选择您的应用程序并修改所需的元数据值。一旦你完成了所有的变更，在决议中心回复这条信息，我们将继续审查。</p>
<p>注意:通过选择每个特定的本地化并做出适当的更改，请确保对所有应用程序本地化进行任何元数据更改。</p>
<h1 id="开源地址"><a href="#开源地址" class="headerlink" title="开源地址"></a>开源地址</h1><h3 id="https-github-com-quanweiwang-Gank-io"><a href="#https-github-com-quanweiwang-Gank-io" class="headerlink" title="https://github.com/quanweiwang/Gank.io"></a><a href="https://github.com/quanweiwang/Gank.io" target="_blank" rel="external">https://github.com/quanweiwang/Gank.io</a></h3><h1 id="App-Store"><a href="#App-Store" class="headerlink" title="App Store"></a>App Store</h1><h3 id="搜索–-今日干货"><a href="#搜索–-今日干货" class="headerlink" title="搜索– 今日干货"></a>搜索– 今日干货</h3><h3 id="https-itunes-apple-com-cn-app-id1353802293-amp-mt-8"><a href="#https-itunes-apple-com-cn-app-id1353802293-amp-mt-8" class="headerlink" title="https://itunes.apple.com/cn/app/id1353802293?&amp;mt=8"></a><a href="https://itunes.apple.com/cn/app/id1353802293?&amp;mt=8" target="_blank" rel="external">https://itunes.apple.com/cn/app/id1353802293?&amp;mt=8</a></h3><h3 id="感谢所有默默付出的编辑们愿大家有美好一天"><a href="#感谢所有默默付出的编辑们愿大家有美好一天" class="headerlink" title="感谢所有默默付出的编辑们愿大家有美好一天"></a>感谢所有默默付出的编辑们愿大家有美好一天</h3>]]></content>
    
    <summary type="html">
    
      &lt;div align=center&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;http://ojgg6fpio.bkt.clouddn.com/gank.io-1.png&quot; alt=&quot;gank.io&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h1 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h1&gt;&lt;p&gt;2016年1月11日订阅干货集中营，没翻邮件我自己都忘了。&lt;br&gt;从开始的每天中午一更到现在佛系更新，一路见证了干货集中营的发展历程。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://www.wangquanwei.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS 简易富文本使用教程</title>
    <link href="http://www.wangquanwei.com/2017-12-26-1.html"/>
    <id>http://www.wangquanwei.com/2017-12-26-1.html</id>
    <published>2017-12-26T03:33:08.000Z</published>
    <updated>2018-06-23T01:16:41.078Z</updated>
    
    <content type="html"><![CDATA[<div align="center"><br><br><img src="http://ojgg6fpio.bkt.clouddn.com/201806011100.png" alt="image"><br><br></div>

<h1 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h1><p>本文所使用的第三方富文本工具类由YouXianMing大神提供。<br><a href="https://www.cnblogs.com/YouXianMing/p/3875542.html" target="_blank" rel="external">https://www.cnblogs.com/YouXianMing/p/3875542.html</a></p>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>1、在使用UITextView的富文本时 allowsEditingTextAttributes 必须设为 YES 否则会出现无法改变字体大小的问题，是否存在其他问题待发现。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">textView.allowsEditingTextAttributes = YES;</div></pre></td></tr></table></figure>
<p>2、iOS10.3开始给文字添加删除线会不起作用，需要添加以下代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[attributedString addAttributes:@&#123;NSStrikethroughStyleAttributeName:@(NSUnderlineStyleSingle),NSBaselineOffsetAttributeName:@(0)&#125; range:deleteLineRange];</div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="可点击的富文本"><a href="#可点击的富文本" class="headerlink" title="可点击的富文本"></a>可点击的富文本</h1><div align="center"><br><br><img src="http://ojgg6fpio.bkt.clouddn.com/01A5C8DE-3514-4C96-9E1B-F1FA10B73E52.png?imageMogr2/thumbnail/!100p" alt="image"><br><br></div>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">//协议</div><div class="line">UITextView * protocolTextView = [self protocol];</div><div class="line">[self.view addSubview:protocolTextView];</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">#pragma mark- 协议</div><div class="line">- (UITextView *)protocol&#123;</div><div class="line">    </div><div class="line">    UITextView * textView = [[UITextView alloc] init];</div><div class="line">    </div><div class="line">    NSMutableParagraphStyle *ps = [[NSMutableParagraphStyle alloc] init];</div><div class="line">    [ps setAlignment:NSTextAlignmentCenter];</div><div class="line">    </div><div class="line">    NSMutableAttributedString *attributedString = [[NSMutableAttributedString alloc] initWithString:@&quot;注册即表示您已阅读，并同意《服务条款》&quot;];</div><div class="line">    [attributedString addAttribute:NSLinkAttributeName</div><div class="line">                                  value:@&quot;fuwu://&quot;</div><div class="line">                                  range:[[attributedString string] rangeOfString:@&quot;《服务条款》&quot;]];</div><div class="line"></div><div class="line">    [attributedString addAttribute:NSFontAttributeName value:[UIFont systemFontOfSize:kHeight(22)] range:NSMakeRange(0, attributedString.length)];</div><div class="line">    [attributedString addAttribute:NSParagraphStyleAttributeName value:ps range:NSMakeRange(0, attributedString.length)];</div><div class="line">    [attributedString addAttribute:NSForegroundColorAttributeName value:RGB_HEX(0x535353) range:NSMakeRange(0, attributedString.length)];</div><div class="line">    </div><div class="line">    textView.attributedText = attributedString;</div><div class="line">    textView.linkTextAttributes = @&#123;NSForegroundColorAttributeName: RGB_HEX(0x89a3d1),</div><div class="line">                                    NSUnderlineColorAttributeName: [UIColor lightGrayColor],</div><div class="line">                                    &#125;;</div><div class="line"></div><div class="line">    textView.delegate = self;</div><div class="line">    textView.editable = NO;        //必须禁止输入，否则点击将弹出输入键盘</div><div class="line">    textView.scrollEnabled = NO;</div><div class="line">    </div><div class="line">    return textView;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>点击《服务条款》后就会执行以下方法，前提textView.delegate = self;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">- (BOOL)textView:(UITextView *)textView shouldInteractWithURL:(NSURL *)URL inRange:(NSRange)characterRange &#123;</div><div class="line">    </div><div class="line">    if ([[URL scheme] isEqualToString:@&quot;fuwu&quot;]) &#123;</div><div class="line">        </div><div class="line">        //服务条款</div><div class="line">        //具体的业务逻辑</div><div class="line">        </div><div class="line">        return NO;</div><div class="line">    &#125; </div><div class="line">    return YES;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="不同的文字颜色"><a href="#不同的文字颜色" class="headerlink" title="不同的文字颜色"></a>不同的文字颜色</h1><div align="center"><br><br><img src="http://ojgg6fpio.bkt.clouddn.com/159F5645-C87D-4834-81EF-0DBA32F02A31.png" alt="image"><br><br></div>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">- (NSMutableAttributedString *)cashPriceAttributedWithString:(NSString *)price originalPrice:(NSString *)originalPrice &#123;</div><div class="line">    </div><div class="line">    NSString * str = [NSString stringWithFormat:@&quot;凭此券到店支付%@可抵%@&quot;,price,originalPrice];</div><div class="line">    //数字</div><div class="line">    NSRange priceRange = NSMakeRange(7, [price length]);</div><div class="line">    NSRange originalPriceRange = NSMakeRange(7+[price length]+2, [originalPrice length]);</div><div class="line">    </div><div class="line">    NSMutableAttributedString * attributedString = [str createAttributedStringAndConfig:@[</div><div class="line">                                                                                          [ConfigAttributedString foregroundColor:RGB_HEX(0xcbb693) range:priceRange],</div><div class="line">                                                                                          [ConfigAttributedString foregroundColor:RGB_HEX(0xcbb693) range:originalPriceRange],</div><div class="line">                                                                                          ]];</div><div class="line">    return attributedString;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="调整文字位置"><a href="#调整文字位置" class="headerlink" title="调整文字位置"></a>调整文字位置</h1><p><img src="http://ojgg6fpio.bkt.clouddn.com/3101B044-201C-460F-A7EC-2BC328B6027A.png" alt="image"></p>
<p>图中的红点，不是图片是输入法符号里找出来的。<br><strong>可能存在红点不和文字对齐的情况，所以要用到基线偏移 NSBaselineOffsetAttributeName</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">- (NSMutableAttributedString *)bargainAttributedString:(NSString *)string &#123;</div><div class="line">    </div><div class="line">    NSString * str = [NSString stringWithFormat:@&quot;● %@&quot;,string];</div><div class="line">    NSRange range = NSMakeRange(0, 1);</div><div class="line">    </div><div class="line">    NSMutableAttributedString * attributedString = [str createAttributedStringAndConfig:@[</div><div class="line">                                                                                          [ConfigAttributedString foregroundColor:RGB_HEX(0xCC5354) range:range],</div><div class="line">                                                                                          [ConfigAttributedString font:[UIFont boldSystemFontOfSize:6.f] range:range],</div><div class="line">                                                                                          </div><div class="line">                                                                                          ]];</div><div class="line">    //NSBaselineOffsetAttributeName 设置基线偏移值。取值为NSNumber （float），正值上偏，负值下偏</div><div class="line">    [attributedString addAttribute:NSBaselineOffsetAttributeName value:@(3) range:[str rangeOfString:@&quot;●&quot;]];</div><div class="line">    </div><div class="line">    return attributedString;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="文字不同大小"><a href="#文字不同大小" class="headerlink" title="文字不同大小"></a>文字不同大小</h1><div align="center"> 

<p><img src="http://ojgg6fpio.bkt.clouddn.com/BD3DE029-754F-444D-9738-A4235D4C5304.png" alt="image"></p>
<p></p></div><br>图中左边¥和右边100大小不一样<p></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">//string = ¥100</div><div class="line">- (NSMutableAttributedString *)priceAttributedString:(NSString *)string &#123;</div><div class="line">    </div><div class="line">    //优惠价</div><div class="line">    NSRange vipPriceRange = NSMakeRange(1, [string length]-1);</div><div class="line">    NSMutableAttributedString * attributedString = [string createAttributedStringAndConfig:@[</div><div class="line">                                                                                             [ConfigAttributedString font:[UIFont systemFontOfSize:42.f] range:vipPriceRange],</div><div class="line">                                                                                             ]];</div><div class="line">    return attributedString;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="文字删除线"><a href="#文字删除线" class="headerlink" title="文字删除线"></a>文字删除线</h1><div align="center"> 

<p><img src="http://ojgg6fpio.bkt.clouddn.com/BD3DE029-754F-444D-9738-A4235D4C5304.png" alt="image"></p>
<p></p></div><br>图中右下角原优惠价150带删除线<p></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">- (NSMutableAttributedString *)originalAttributedString:(NSString *)string &#123;</div><div class="line">    </div><div class="line">    </div><div class="line">    //删除线</div><div class="line">    NSRange deleteLineRange = NSMakeRange(0, [string length]);</div><div class="line"></div><div class="line">    NSMutableAttributedString * attributedString = [string createAttributedStringAndConfig:@[</div><div class="line">                                                                                                [ConfigAttributedString strikethroughStyle:NSUnderlineStyleSingle range:deleteLineRange],</div><div class="line"></div><div class="line">                                                                                             ]];</div><div class="line"></div><div class="line">    [attributedString addAttributes:@&#123;NSStrikethroughStyleAttributeName:@(NSUnderlineStyleSingle),NSBaselineOffsetAttributeName:@(0)&#125; range:deleteLineRange];</div><div class="line">    </div><div class="line">    return attributedString;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;div align=center&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;http://ojgg6fpio.bkt.clouddn.com/201806011100.png&quot; alt=&quot;image&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;h1 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h1&gt;&lt;p&gt;本文所使用的第三方富文本工具类由YouXianMing大神提供。&lt;br&gt;&lt;a href=&quot;https://www.cnblogs.com/YouXianMing/p/3875542.html&quot;&gt;https://www.cnblogs.com/YouXianMing/p/3875542.html&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h1&gt;&lt;p&gt;1、在使用UITextView的富文本时 allowsEditingTextAttributes 必须设为 YES 否则会出现无法改变字体大小的问题，是否存在其他问题待发现。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;textView.allowsEditingTextAttributes = YES;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2、iOS10.3开始给文字添加删除线会不起作用，需要添加以下代码&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[attributedString addAttributes:@&amp;#123;NSStrikethroughStyleAttributeName:@(NSUnderlineStyleSingle),NSBaselineOffsetAttributeName:@(0)&amp;#125; range:deleteLineRange];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://www.wangquanwei.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>mac 10.13 cocoapods无法使用的解决办法</title>
    <link href="http://www.wangquanwei.com/2017-10-09-1.html"/>
    <id>http://www.wangquanwei.com/2017-10-09-1.html</id>
    <published>2017-10-09T07:13:08.000Z</published>
    <updated>2018-03-31T02:54:33.592Z</updated>
    
    <content type="html"><![CDATA[<h1 id="syntax-error-unexpected-end-of-file"><a href="#syntax-error-unexpected-end-of-file" class="headerlink" title="syntax error: unexpected end of file"></a>syntax error: unexpected end of file</h1><p><img src="http://ojgg6fpio.bkt.clouddn.com/cocoapods%2010.13%20%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8.png" alt="image"><br><a id="more"></a></p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//我开了科学上网</div><div class="line">sudo gem install cocoapods</div></pre></td></tr></table></figure>
<p>或</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo gem install -n /usr/local/bin cocoapods --pre</div></pre></td></tr></table></figure>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://github.com/CocoaPods/CocoaPods/issues/6778" target="_blank" rel="external">https://github.com/CocoaPods/CocoaPods/issues/6778</a></p>
<p><a href="https://stackoverflow.com/questions/44396215/cocoapods-not-working-in-macos-high-sierra" target="_blank" rel="external">https://stackoverflow.com/questions/44396215/cocoapods-not-working-in-macos-high-sierra</a></p>
<h1 id="ERROR-While-executing-gem-…-TypeError-no-implicit-conversion-of-nil-into-String"><a href="#ERROR-While-executing-gem-…-TypeError-no-implicit-conversion-of-nil-into-String" class="headerlink" title="ERROR:  While executing gem … (TypeError) no implicit conversion of nil into String"></a>ERROR:  While executing gem … (TypeError) no implicit conversion of nil into String</h1><p>这是在执行install cocoapods时报的错误</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ERROR:  While executing gem ... (TypeError)</div><div class="line">    no implicit conversion of nil into String</div></pre></td></tr></table></figure>
<h3 id="解决办法-1"><a href="#解决办法-1" class="headerlink" title="解决办法"></a>解决办法</h3><p>先执行命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo gem update -n /usr/local/bin --system</div></pre></td></tr></table></figure>
<p>再执行：  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo gem install -n /usr/local/bin cocoapods --pre</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;syntax-error-unexpected-end-of-file&quot;&gt;&lt;a href=&quot;#syntax-error-unexpected-end-of-file&quot; class=&quot;headerlink&quot; title=&quot;syntax error: unexpected end of file&quot;&gt;&lt;/a&gt;syntax error: unexpected end of file&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://ojgg6fpio.bkt.clouddn.com/cocoapods%2010.13%20%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8.png&quot; alt=&quot;image&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://www.wangquanwei.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS 轻量级社会化组件Trochilus使用指北</title>
    <link href="http://www.wangquanwei.com/2017-07-24-1.html"/>
    <id>http://www.wangquanwei.com/2017-07-24-1.html</id>
    <published>2017-07-24T15:07:08.000Z</published>
    <updated>2018-07-28T12:32:01.815Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>Trochilus是iOS轻量级社会化组件(支持:免SDK支付、打赏、分享、授权)。  </p>
<p>现已支持以下平台:    </p>
<p>QQ (QQ好友分享、QQ空间分享、QQ授权)<br>微信 (微信好友分享、微信朋友圈分享、微信收藏、小程序分享、微信授权、微信支付)<br>微博 (微博分享、微博授权)<br>支付宝 (支付宝支付、支付宝打赏)</p>
<a id="more"></a>
<h1 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h1><p>1、无需导入以下系统库(framework、tbd)</p>
<p>QQ平台  </p>
<p><del>libiconv.dylib<br>SystemConfiguration.framework<br>CoreGraphics.Framework<br>libsqlite3.dylib<br>CoreTelephony.framework<br>libstdc++.dylib<br>libz.dylib</del></p>
<p>微信平台  </p>
<p><del>SystemConfiguration.framework<br>libz.dylib<br>libsqlite3.0.dylib<br>libc++.dylib<br>Security.framework<br>CoreTelephony.framework<br>CFNetwork.framework</del></p>
<p>微博平台  </p>
<p><del>ImageIO.framework<br>libsqlite3.dylib</del>  </p>
<p>支付宝平台  </p>
<p><del>CFNetwork.framework<br>SystemConfiguration.framework<br>CoreGraphics.framework<br>CoreMotion.framework<br>CoreTelephony.framework<br>CoreText.framework<br>libc++.tbd<br>libz.tbd</del>  </p>
<p>2、无需导入各个平台SDK  </p>
<p><del>QQSDK<br>微信SDK<br>微博SDK<br>支付宝SDK</del></p>
<p>3、各个平台回调Trochilus内部自动处理。  </p>
<p>4、解决iOS9 or latter左上角返回，不触发回调的问题。  </p>
<h1 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h1><ul>
<li>[ ] 必填参数验证(当必填参数未填时返回错误信息)</li>
<li>[ ] CocoaPods支持</li>
<li>[ ] 日志系统</li>
</ul>
<h1 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h1><p>打开AppDelegate.m导入头文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#import &lt;Trochilus/Trochilus.h&gt;</div></pre></td></tr></table></figure>
<p>在- (BOOL)application: didFinishLaunchingWithOptions:方法中调用registerPlatforms方法来初始化第三方平台</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions &#123;</div><div class="line">    // Override point for customization after application launch.</div><div class="line">    </div><div class="line">    NSArray * platforms = @[</div><div class="line">                            @(TrochilusPlatformTypeSinaWeibo),</div><div class="line">                            @(TrochilusPlatformTypeQQ),</div><div class="line">                            @(TrochilusPlatformTypeWechat)</div><div class="line">                            ];</div><div class="line">    </div><div class="line">    [Trochilus registerPlatforms:platforms onConfiguration:^(TrochilusPlatformType platformType, NSMutableDictionary *appInfo) &#123;</div><div class="line">        </div><div class="line">        switch (platformType) &#123;</div><div class="line">            case TrochilusPlatformTypeSinaWeibo:</div><div class="line">                </div><div class="line">                [appInfo trochilusSetSinaWeiboByAppKey:kSinaWeiboAppKey</div><div class="line">                                             appSecret:kSinaWeiboAppSecret</div><div class="line">                                           redirectUri:kSinaWeiboRedirectUri];</div><div class="line">                </div><div class="line">                break;</div><div class="line">            case TrochilusPlatformTypeQQ:</div><div class="line">                </div><div class="line">                [appInfo trochilusSetQQByAppId:kQQAppId</div><div class="line">                                        appKey:kQQAppKey</div><div class="line">                                        useTIM:NO];</div><div class="line">                break;</div><div class="line">            case TrochilusPlatformTypeWechat:</div><div class="line">                </div><div class="line">                [appInfo trochilusSetWeChatByAppId:kWeChatAppId</div><div class="line">                                         appSecret:kWeChatAppSecret];</div><div class="line">                </div><div class="line">                break;</div><div class="line">            default:</div><div class="line">                break;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">    return YES;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>(注意：每一个case对应一个break不要忘记填写，不然很可能有不必要的错误。）</p>
<h3 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h3><p>添加以下代码，分享之后的效果需要去对应的分享平台上观看，首先要构造分享参数，然后再根据每个平台的方法定制自己想要分享的不同的分享内容。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line">NSMutableDictionary * parameters = [NSMutableDictionary dictionary];</div><div class="line"></div><div class="line">//QQ好友分享</div><div class="line">[parameters trochilusSetQQParamsByText:@&quot;Trochilus&quot;</div><div class="line">                                 title:nil</div><div class="line">                                   url:nil</div><div class="line">                         audioFlashURL:nil</div><div class="line">                         videoFlashURL:nil</div><div class="line">                            thumbImage:nil</div><div class="line">                                images:nil</div><div class="line">                                  type:self.type];</div><div class="line">                           </div><div class="line">//微信好友分享</div><div class="line">[parameters trochilusSetWeChatParamsByText:@&quot;Trochilus&quot;</div><div class="line">                                     title:nil</div><div class="line">                                       url:nil</div><div class="line">                              mediaTagName:nil</div><div class="line">                             messageAction:nil</div><div class="line">                                thumbImage:nil</div><div class="line">                                     image:nil</div><div class="line">                              musicFileURL:nil</div><div class="line">                                   extInfo:nil</div><div class="line">                                  fileData:nil</div><div class="line">                             fileExtension:nil</div><div class="line">                              emoticonData:nil</div><div class="line">                                      type:TrochilusContentTypeText];</div><div class="line"></div><div class="line">//微信小程序分享</div><div class="line">[parameters trochilusSetWeChatMiniProgramShareParamsByWebpageUrl:@&quot;http://www.wangquanwei.com/&quot;</div><div class="line">                                                        userName:@&quot;gh_d43f693ca31f&quot;</div><div class="line">                                                            path:@&quot;/page/API/pages/share/share&quot;</div><div class="line">                                                           title:@&quot;MiniProgram&quot;</div><div class="line">                                                     description:@&quot;test MiniProgram&quot;</div><div class="line">                                                      thumbImage:thumbImage</div><div class="line">                                                     hdThumImage:thumbImage</div><div class="line">                                                 withShareTicket:YES</div><div class="line">                                                     contentType:TrochilusContentTypeMiniProgram</div><div class="line">                                                 miniProgramType:TrochilusMiniProgramTypeRelease];</div><div class="line"></div><div class="line">//微博分享</div><div class="line">[parameters trochilusSetSinaWeiboShareParamsByText:@&quot;Trochilus&quot;</div><div class="line">                                             title:nil</div><div class="line">                                             image:nil</div><div class="line">                                               url:nil</div><div class="line">                                          latitude:0</div><div class="line">                                         longitude:0</div><div class="line">                                          objectID:nil</div><div class="line">                                              type:TrochilusContentTypeText];</div><div class="line">//分享</div><div class="line">[Trochilus shareWithPlatformType:&#123;分享平台&#125; parameters:parameters onStateChanged:^(TrochilusResponseState state, NSDictionary *userData, NSError *error) &#123;</div><div class="line">        </div><div class="line">        switch (state) &#123;</div><div class="line">            case TrochilusResponseStateSuccess: &#123;</div><div class="line">                UIAlertView * alert = [[UIAlertView alloc] initWithTitle:@&quot;提示&quot; message:@&quot;分享成功&quot; delegate:nil cancelButtonTitle:@&quot;确定&quot; otherButtonTitles:nil, nil];</div><div class="line">                [alert show];</div><div class="line">            &#125;</div><div class="line">                break;</div><div class="line">            case TrochilusResponseStateFail: &#123;</div><div class="line">                </div><div class="line">                UIAlertView * alert = [[UIAlertView alloc] initWithTitle:@&quot;提示&quot; message:[NSString stringWithFormat:@&quot;分享失败\n%@&quot;,error] delegate:nil cancelButtonTitle:@&quot;确定&quot; otherButtonTitles:nil, nil];</div><div class="line">                [alert show];</div><div class="line">            &#125;</div><div class="line">                break;</div><div class="line">            case TrochilusResponseStateCancel: &#123;</div><div class="line">                UIAlertView * alert = [[UIAlertView alloc] initWithTitle:@&quot;提示&quot; message:@&quot;用户取消&quot; delegate:nil cancelButtonTitle:@&quot;确定&quot; otherButtonTitles:nil, nil];</div><div class="line">                [alert show];</div><div class="line">            &#125;</div><div class="line">                break;</div><div class="line">            default:</div><div class="line">                break;</div><div class="line">        &#125;</div><div class="line">&#125;];</div></pre></td></tr></table></figure>
<p>更多可以参考文件 (Trochilus / Category / NSMutableDictionary+TrochilusShare)中的方法。</p>
<h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><p>把如下代码复制并粘贴到你要登录的位置,并且修改相应的参数即可。<br>这里以QQ登陆为例<br>（其他的平台也一样的处理，修改下登陆方法里authorize的平台类型参数：微信登录－&gt; TrochilusPlatformTypeWechat,新浪微博登录－&gt;TrochilusPlatformTypeSinaWeibo。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">[Trochilus authorizeWithPlatformType:TrochilusPlatformTypeQQ settings:nil onStateChanged:^(TrochilusResponseState state, TrochilusUser *user, NSError *error) &#123;</div><div class="line">        </div><div class="line">        switch (state) &#123;</div><div class="line">            case TrochilusResponseStateSuccess: &#123;</div><div class="line">                UIAlertView * alert = [[UIAlertView alloc] initWithTitle:@&quot;提示&quot; message:@&quot;授权成功&quot; delegate:nil cancelButtonTitle:@&quot;确定&quot; otherButtonTitles:nil, nil];</div><div class="line">                [alert show];</div><div class="line">            &#125;</div><div class="line">                break;</div><div class="line">            case TrochilusResponseStateFail: &#123;</div><div class="line">                </div><div class="line">                UIAlertView * alert = [[UIAlertView alloc] initWithTitle:@&quot;提示&quot; message:[NSString stringWithFormat:@&quot;授权失败\n%@&quot;,error] delegate:nil cancelButtonTitle:@&quot;确定&quot; otherButtonTitles:nil, nil];</div><div class="line">                [alert show];</div><div class="line">            &#125;</div><div class="line">                break;</div><div class="line">            case TrochilusResponseStateCancel: &#123;</div><div class="line">                UIAlertView * alert = [[UIAlertView alloc] initWithTitle:@&quot;提示&quot; message:@&quot;用户取消&quot; delegate:nil cancelButtonTitle:@&quot;确定&quot; otherButtonTitles:nil, nil];</div><div class="line">                [alert show];</div><div class="line">            &#125;</div><div class="line">                break;</div><div class="line">            default:</div><div class="line">                break;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        </div><div class="line">&#125;];</div></pre></td></tr></table></figure>
<h3 id="支付"><a href="#支付" class="headerlink" title="支付"></a>支付</h3><p>首先要构造支付参数，然后再根据每个平台调用不同的方法。<br>支付涉及到敏感数据，参数全隐去。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">//微信支付</div><div class="line">NSMutableDictionary * wechatPay = [NSMutableDictionary dictionary];</div><div class="line">[wechatPay payWithWechatPartnerId:&#123;partnerId&#125;</div><div class="line">                             prepayId:&#123;prepayId&#125;</div><div class="line">                             nonceStr:&#123;nonceStr&#125;</div><div class="line">                            timeStamp:@&quot;1499752264&quot;</div><div class="line">                              package:@&quot;Sign=WXPay&quot; //iOS微信支付package只能为Sign=WXPay</div><div class="line">                                 sign:&#123;sign&#125;];</div><div class="line">                                 </div><div class="line">[Trochilus wechatPayWithParameters:wechatPay onStateChanged:^(TrochilusResponseState state,NSError *error) &#123;</div><div class="line">        </div><div class="line">        switch (state) &#123;</div><div class="line">            case TrochilusResponseStateSuccess: &#123;</div><div class="line">                UIAlertView * alert = [[UIAlertView alloc] initWithTitle:@&quot;提示&quot; message:@&quot;支付成功&quot; delegate:nil cancelButtonTitle:@&quot;确定&quot; otherButtonTitles:nil, nil];</div><div class="line">                [alert show];</div><div class="line">            &#125;</div><div class="line">                break;</div><div class="line">            case TrochilusResponseStateFail: &#123;</div><div class="line">                </div><div class="line">                UIAlertView * alert = [[UIAlertView alloc] initWithTitle:@&quot;提示&quot; message:[NSString stringWithFormat:@&quot;支付失败\n%@&quot;,error] delegate:nil cancelButtonTitle:@&quot;确定&quot; otherButtonTitles:nil, nil];</div><div class="line">                [alert show];</div><div class="line">            &#125;</div><div class="line">                break;</div><div class="line">            case TrochilusResponseStateCancel: &#123;</div><div class="line">                UIAlertView * alert = [[UIAlertView alloc] initWithTitle:@&quot;提示&quot; message:@&quot;用户取消&quot; delegate:nil cancelButtonTitle:@&quot;确定&quot; otherButtonTitles:nil, nil];</div><div class="line">                [alert show];</div><div class="line">            &#125;</div><div class="line">                break;</div><div class="line">            case TrochilusResponseStatePayWait: &#123;</div><div class="line">                </div><div class="line">                //iOS9 or later 左上角返回app时 返回TrochilusResponseStatePayWait状态，客户端需要自己去服务器查询是否支付成功</div><div class="line">                </div><div class="line">                break;</div><div class="line">            &#125;</div><div class="line">            default:</div><div class="line">                break;</div><div class="line">        &#125;</div><div class="line">&#125;];</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">//支付宝支付</div><div class="line">NSString * urlScheme = &#123;urlScheme&#125;;</div><div class="line">NSString * orderString = &#123;由服务器返回构造好的支付字符串&#125;;</div><div class="line"></div><div class="line">[Trochilus aliPayWithUrlScheme:urlScheme orderString:orderString onStateChanged:^(TrochilusResponseState state, NSError *error) &#123;</div><div class="line">        </div><div class="line">        switch (state) &#123;</div><div class="line">            case TrochilusResponseStateSuccess: &#123;</div><div class="line">                UIAlertView * alert = [[UIAlertView alloc] initWithTitle:@&quot;提示&quot; message:@&quot;支付成功&quot; delegate:nil cancelButtonTitle:@&quot;确定&quot; otherButtonTitles:nil, nil];</div><div class="line">                [alert show];</div><div class="line">            &#125;</div><div class="line">                break;</div><div class="line">            case TrochilusResponseStateFail: &#123;</div><div class="line">                </div><div class="line">                UIAlertView * alert = [[UIAlertView alloc] initWithTitle:@&quot;提示&quot; message:[NSString stringWithFormat:@&quot;支付失败\n%@&quot;,error] delegate:nil cancelButtonTitle:@&quot;确定&quot; otherButtonTitles:nil, nil];</div><div class="line">                [alert show];</div><div class="line">            &#125;</div><div class="line">                break;</div><div class="line">            case TrochilusResponseStateCancel: &#123;</div><div class="line">                UIAlertView * alert = [[UIAlertView alloc] initWithTitle:@&quot;提示&quot; message:@&quot;用户取消&quot; delegate:nil cancelButtonTitle:@&quot;确定&quot; otherButtonTitles:nil, nil];</div><div class="line">                [alert show];</div><div class="line">            &#125;</div><div class="line">                break;</div><div class="line">            case TrochilusResponseStatePayWait: &#123;</div><div class="line">                </div><div class="line">                //iOS9 or later 左上角返回app时 返回TrochilusResponseStatePayWait状态，客户端需要自己去服务器查询是否支付成功</div><div class="line">                </div><div class="line">                break;</div><div class="line">            &#125;</div><div class="line">            default:</div><div class="line">                break;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">&#125;];</div></pre></td></tr></table></figure>
<h3 id="适配iOS9-系统"><a href="#适配iOS9-系统" class="headerlink" title="适配iOS9+系统"></a>适配iOS9+系统</h3><p>1、http 问题:<br>在iOS9下，系统默认会拦截对http协议接口的访问，因此无法获取http协议接口的数据。对Trochilus来说，可能无法获取用户信息。<br>解决方法:<br>在项目的info.plist中添加一个Key：App Transport Security Settings，类型为字典类型。然后给它添加一个Key：Allow Arbitrary Loads，类型为Boolean类型，值为YES。</p>
<p><img src="http://ojgg6fpio.bkt.clouddn.com/Trochilus1.png" alt="">  </p>
<p>2、白名单 问题：<br>在iOS 9下涉及到平台客户端跳转，系统会自动到项目info.plist下检测是否设置平台Scheme。对于需要配置的平台，如果没有配置，就无法正常跳转平台客户端。因此要支持客户端的分享和授权等，需要配置Scheme名单。<br>解决方法:<br>在项目的info.plist中添加一LSApplicationQueriesSchemes，类型为Array。然后给它添加一个需要支持的项目，类型为字符串类型。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">&lt;key&gt;LSApplicationQueriesSchemes&lt;/key&gt;</div><div class="line">&lt;array&gt;</div><div class="line">	&lt;string&gt;wechat&lt;/string&gt;</div><div class="line">	&lt;string&gt;weixin&lt;/string&gt;</div><div class="line">	&lt;string&gt;sinaweibohd&lt;/string&gt;</div><div class="line">	&lt;string&gt;sinaweibo&lt;/string&gt;</div><div class="line">	&lt;string&gt;sinaweibosso&lt;/string&gt;</div><div class="line">	&lt;string&gt;weibosdk&lt;/string&gt;</div><div class="line">	&lt;string&gt;weibosdk2.5&lt;/string&gt;</div><div class="line">	&lt;string&gt;mqqapi&lt;/string&gt;</div><div class="line">	&lt;string&gt;mqq&lt;/string&gt;</div><div class="line">	&lt;string&gt;mqqOpensdkSSoLogin&lt;/string&gt;</div><div class="line">	&lt;string&gt;mqqconnect&lt;/string&gt;</div><div class="line">	&lt;string&gt;mqqopensdkdataline&lt;/string&gt;</div><div class="line">	&lt;string&gt;mqqopensdkgrouptribeshare&lt;/string&gt;</div><div class="line">	&lt;string&gt;mqqopensdkfriend&lt;/string&gt;</div><div class="line">	&lt;string&gt;mqqopensdkapi&lt;/string&gt;</div><div class="line">	&lt;string&gt;mqqopensdkapiV2&lt;/string&gt;</div><div class="line">	&lt;string&gt;mqqopensdkapiV3&lt;/string&gt;</div><div class="line">	&lt;string&gt;mqzoneopensdk&lt;/string&gt;</div><div class="line">	&lt;string&gt;wtloginmqq&lt;/string&gt;</div><div class="line">	&lt;string&gt;wtloginmqq2&lt;/string&gt;</div><div class="line">	&lt;string&gt;mqqwpa&lt;/string&gt;</div><div class="line">	&lt;string&gt;mqzone&lt;/string&gt;</div><div class="line">	&lt;string&gt;mqzonev2&lt;/string&gt;</div><div class="line">	&lt;string&gt;mqzoneshare&lt;/string&gt;</div><div class="line">	&lt;string&gt;wtloginqzone&lt;/string&gt;</div><div class="line">	&lt;string&gt;mqzonewx&lt;/string&gt;</div><div class="line">	&lt;string&gt;mqzoneopensdkapiV2&lt;/string&gt;</div><div class="line">	&lt;string&gt;mqzoneopensdkapi19&lt;/string&gt;</div><div class="line">	&lt;string&gt;mqzoneopensdkapi&lt;/string&gt;</div><div class="line">	&lt;string&gt;mqzoneopensdk&lt;/string&gt;</div><div class="line">	&lt;string&gt;alipay&lt;/string&gt;</div><div class="line">	&lt;string&gt;alipayshare&lt;/string&gt;</div><div class="line">&lt;/array&gt;</div></pre></td></tr></table></figure>
<p><img src="http://ojgg6fpio.bkt.clouddn.com/Trochilus2.png" alt=""></p>
<h3 id="URL-Scheme"><a href="#URL-Scheme" class="headerlink" title="URL Scheme"></a>URL Scheme</h3><p>别忘了配置URL Scheme否则将无法返回客户端。<br>具体规则请看各个平台文档。</p>
<h1 id="Support-or-Contact"><a href="#Support-or-Contact" class="headerlink" title="Support or Contact"></a>Support or Contact</h1><p>在使用Trochilus过程中有任何问题，都可以添加一个<a href="https://github.com/quanweiwang/Trochilus/issues" target="_blank" rel="external">issues</a>，我会及时解决。如果您想贡献代码，欢迎Pull Requests。</p>
<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p><a href="https://github.com/quanweiwang/Trochilus" target="_blank" rel="external">Trochilus https://github.com/quanweiwang/Trochilus</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;Trochilus是iOS轻量级社会化组件(支持:免SDK支付、打赏、分享、授权)。  &lt;/p&gt;
&lt;p&gt;现已支持以下平台:    &lt;/p&gt;
&lt;p&gt;QQ (QQ好友分享、QQ空间分享、QQ授权)&lt;br&gt;微信 (微信好友分享、微信朋友圈分享、微信收藏、小程序分享、微信授权、微信支付)&lt;br&gt;微博 (微博分享、微博授权)&lt;br&gt;支付宝 (支付宝支付、支付宝打赏)&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://www.wangquanwei.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>mac 安装 protocol buffer（2.6.1版） 教程</title>
    <link href="http://www.wangquanwei.com/2017-06-10-1.html"/>
    <id>http://www.wangquanwei.com/2017-06-10-1.html</id>
    <published>2017-06-10T12:23:22.000Z</published>
    <updated>2018-06-23T01:16:41.077Z</updated>
    
    <content type="html"><![CDATA[<p>在写这篇文章时protocol buffer的最新版为3.3.1。</p>
<h1 id="什么是protocol-buffer"><a href="#什么是protocol-buffer" class="headerlink" title="什么是protocol buffer"></a>什么是protocol buffer</h1><blockquote>
<p>protocol buffer(以下简称PB)是google 的一种数据交换的格式，它独立于语言，独立于平台。google 提供了多种语言的实现：java、c#、c++、go 和 python，每一种实现都包含了相应语言的编译器以及库文件。由于它是一种二进制的格式，比使用 xml 进行数据交换快许多。可以把它用于分布式应用之间的数据通信或者异构环境下的数据交换。作为一种效率和兼容性都很优秀的二进制数据传输格式，可以用于诸如网络传输、配置文件、数据存储等诸多领域。<br>以上内容来自百度百科。</p>
</blockquote>
<a id="more"></a>
<h1 id="安装-brew"><a href="#安装-brew" class="headerlink" title="安装 brew"></a>安装 brew</h1><p>打开终端，输入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</div></pre></td></tr></table></figure>
<p>回车,会提示按任意键继续，继续会出现输入密码的提示，输入电脑的密码即可继续安装。</p>
<h1 id="安装-automake"><a href="#安装-automake" class="headerlink" title="安装 automake"></a>安装 automake</h1><p>终端输入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install automake</div></pre></td></tr></table></figure>
<h1 id="安装-libtool"><a href="#安装-libtool" class="headerlink" title="安装 libtool"></a>安装 libtool</h1><p>终端输入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install libtool</div></pre></td></tr></table></figure>
<h1 id="安装-protobuf"><a href="#安装-protobuf" class="headerlink" title="安装 protobuf"></a>安装 protobuf</h1><p>这里主讲方式二安装  </p>
<h2 id="方式一、终端输入"><a href="#方式一、终端输入" class="headerlink" title="方式一、终端输入"></a>方式一、终端输入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install protobuf</div></pre></td></tr></table></figure>
<h2 id="方式二、"><a href="#方式二、" class="headerlink" title="方式二、"></a>方式二、</h2><p>1、下载protobuf：<a href="https://github.com/google/protobuf" target="_blank" rel="external">https://github.com/google/protobuf</a>    </p>
<p>2、解压下载的protobuf，并打开终端cd到protobuf目录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /你的存放路径/protobuf-2.6.1</div></pre></td></tr></table></figure>
<p><img src="http://ojgg6fpio.bkt.clouddn.com/mac%20%E5%AE%89%E8%A3%85%20protocol%20buffer%EF%BC%882.6.1%E7%89%88%EF%BC%89%20%E6%95%99%E7%A8%8B1.png" alt="image"></p>
<p>3、执行autogen.sh脚本  </p>
<p>如果按照网上大多数教程，那是执行./configure了，但是你会发现根目录下根本没有configure文件，因为protobuf的编译方式做了修改，要执行autogen.sh才会生成configure脚本。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./autogen.sh</div></pre></td></tr></table></figure>
<p>敲黑板！！！    </p>
<p>这里有个坑,你会发现即使你科学上网了还是time out载不下来。  </p>
<p><img src="http://ojgg6fpio.bkt.clouddn.com/mac%20%E5%AE%89%E8%A3%85%20protocol%20buffer%EF%BC%882.6.1%E7%89%88%EF%BC%89%20%E6%95%99%E7%A8%8B2.png" alt="image"></p>
<p>我们打开autogen.sh脚本看看  </p>
<p><img src="http://ojgg6fpio.bkt.clouddn.com/mac%20%E5%AE%89%E8%A3%85%20protocol%20buffer%EF%BC%882.6.1%E7%89%88%EF%BC%89%20%E6%95%99%E7%A8%8B3.png" alt="image"></p>
<p>看到木有，autogen.sh会去下载一个叫gtest的东东，我们打开其URL看看，404啊有木有！！！  </p>
<p><a href="http://googletest.googlecode.com/files/gtest-1.5.0.tar.bz2" target="_blank" rel="external">http://googletest.googlecode.com/files/gtest-1.5.0.tar.bz2</a></p>
<p>4、下载gtest-1.5.0  </p>
<p><a href="https://github.com/google/googletest/tree/release-1.5.0" target="_blank" rel="external">https://github.com/google/googletest/tree/release-1.5.0</a></p>
<p>下载完成后解压并把文件夹名字改成gtest，并且复制到protobuf文件夹里。</p>
<p><img src="http://ojgg6fpio.bkt.clouddn.com/mac%20%E5%AE%89%E8%A3%85%20protocol%20buffer%EF%BC%882.6.1%E7%89%88%EF%BC%89%20%E6%95%99%E7%A8%8B4.png" alt="image"></p>
<p>5、重复第三步  </p>
<p>因为本地已经有了gtest所以就不会去下载了  </p>
<p>执行autogen.sh脚本并生成configure</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./autogen.sh</div></pre></td></tr></table></figure>
<p>6、执行configure<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./configure</div></pre></td></tr></table></figure></p>
<p>7、编译protobuf</p>
<p>按从上到下顺序依次执行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make check</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo make install</div></pre></td></tr></table></figure>
<p>8、检测是否安装成功</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">protoc --version</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在写这篇文章时protocol buffer的最新版为3.3.1。&lt;/p&gt;
&lt;h1 id=&quot;什么是protocol-buffer&quot;&gt;&lt;a href=&quot;#什么是protocol-buffer&quot; class=&quot;headerlink&quot; title=&quot;什么是protocol buffer&quot;&gt;&lt;/a&gt;什么是protocol buffer&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;protocol buffer(以下简称PB)是google 的一种数据交换的格式，它独立于语言，独立于平台。google 提供了多种语言的实现：java、c#、c++、go 和 python，每一种实现都包含了相应语言的编译器以及库文件。由于它是一种二进制的格式，比使用 xml 进行数据交换快许多。可以把它用于分布式应用之间的数据通信或者异构环境下的数据交换。作为一种效率和兼容性都很优秀的二进制数据传输格式，可以用于诸如网络传输、配置文件、数据存储等诸多领域。&lt;br&gt;以上内容来自百度百科。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="ProtocolBuffer" scheme="http://www.wangquanwei.com/categories/ProtocolBuffer/"/>
    
    
  </entry>
  
  <entry>
    <title>开启iOS自带的调试悬浮窗UIDebuggingInformationOverlay</title>
    <link href="http://www.wangquanwei.com/2017-06-03-1.html"/>
    <id>http://www.wangquanwei.com/2017-06-03-1.html</id>
    <published>2017-06-03T02:24:21.000Z</published>
    <updated>2017-07-11T12:56:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是UIDebuggingInformationOverlay"><a href="#什么是UIDebuggingInformationOverlay" class="headerlink" title="什么是UIDebuggingInformationOverlay"></a>什么是UIDebuggingInformationOverlay</h1><p>UIDebuggingInformationOverlay是由苹果创建的私有子类，大概是帮助开发人员和设计师调试苹果自己的iOS应用程序。</p>
<p>启用后，窗口会浮动在应用的内容上，如下所示</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1488825-279074db866c0051.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<a id="more"></a>
<h1 id="如何开启UIDebuggingInformationOverlay"><a href="#如何开启UIDebuggingInformationOverlay" class="headerlink" title="如何开启UIDebuggingInformationOverlay"></a>如何开启UIDebuggingInformationOverlay</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions&#123;</div><div class="line">    // Override point for customization after application launch.</div><div class="line"></div><div class="line">    Class overlayClass = NSClassFromString(@&quot;UIDebuggingInformationOverlay&quot;);</div><div class="line">    [[overlayClass class] performSelector:@selector(prepareDebuggingOverlay)];</div><div class="line"></div><div class="line">    return YES;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>开启后使用两根手指点击状态栏来调出调试面板。<br>PS:该类是私有类，因此可能将无法通过App Store审核。</p>
<h1 id="UIDebuggingInformationOverlay可以做什么"><a href="#UIDebuggingInformationOverlay可以做什么" class="headerlink" title="UIDebuggingInformationOverlay可以做什么"></a>UIDebuggingInformationOverlay可以做什么</h1><p>从屏幕截图可以看出，覆盖层提供了六个功能。本文将对前五个进行介绍。</p>
<h2 id="一、View-Hierarchy"><a href="#一、View-Hierarchy" class="headerlink" title="一、View Hierarchy"></a>一、View Hierarchy</h2><p>这个选项可以向你展示当前选择的窗口的视图列表。可通过点击cell右侧的感叹号查看详情。包括视图的frame和成员变量等。<br><img src="http://upload-images.jianshu.io/upload_images/1210359-9823a941c7bc9c33.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320" alt="image"><br><img src="http://upload-images.jianshu.io/upload_images/1210359-bc74b8cfbf8086e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320" alt="image"></p>
<h2 id="二、VC-Hierarchy"><a href="#二、VC-Hierarchy" class="headerlink" title="二、VC Hierarchy"></a>二、VC Hierarchy</h2><p>通过这个可以大致看到ViewController层次结构。它与“View Hierarchy”非常相似，只是它显示了活动视图控制器的层次结构。从这里，你可以检查任何视图控制器的详情，包括其视图。<br><img src="http://upload-images.jianshu.io/upload_images/1210359-7bb08a7735cde2b9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320" alt="image"></p>
<h2 id="三、Ivar-Explorer"><a href="#三、Ivar-Explorer" class="headerlink" title="三、Ivar Explorer"></a>三、Ivar Explorer</h2><p>这个特性允许你查看UIApplication对象的成员变量。更重要的是，任何一个对象的变量都是可以被查看的。<br>这包括app delegate，根据你的应用程序的结构，可能会提供一个很好的切入点，允许你进入自定义的对象里。<br><img src="http://upload-images.jianshu.io/upload_images/1210359-0b736ab1044c5eeb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320" alt="image"></p>
<h2 id="四、Measure"><a href="#四、Measure" class="headerlink" title="四、Measure"></a>四、Measure</h2><p>在我看来，这是一个比较酷的特性。它允许你以pt这个精度去测量屏幕内各个元素的尺寸。首先，选择你想查看水平还是竖直的轴线。然后手指拖动屏幕，使用控制台内的放大器来帮助你。有两种模式:</p>
<p>默认的模式忽略了视图边界。据我所知,这种模式将屏幕作为一个点阵图片,并通过颜色的变化作为潜在的测量边界。例如,在下面的屏幕截图中,我能够测量一个textfield的文字的边界和屏幕边界的距离:<br><img src="http://upload-images.jianshu.io/upload_images/1210359-eda3e4204238ee3f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320" alt="image"></p>
<p>“View Mode”则是另外一种处理方式。它清晰的展示了每一个子视图的尺寸。拖动你的手指到要查看的视图上，可以查看它在你选择的轴线上的范围。在下面的屏幕截图里，我测量了顶部输入框的高度。<br><img src="http://upload-images.jianshu.io/upload_images/1210359-ad07ed6f80fb69a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320" alt="image"></p>
<h2 id="五、Spec-Compare"><a href="#五、Spec-Compare" class="headerlink" title="五、Spec Compare"></a>五、Spec Compare</h2><p>我认为这个工具在开发者与设计师之间提供了极大的便利。添加一个屏幕截图到你的设备里然后通过Spec Compare选择它，被选择的这张屏幕截图会展示在当前app的顶部。你可以在屏幕上拖动来调整透明度，以此来对比设计和你app中的实现具体的不同。</p>
<p>PS：iOS10系统记得添加相册访问权限NSPhotoLibraryUsageDescription，否则将会crash。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1210359-6eb68cbc90b1abac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320" alt="image"><br><img src="http://upload-images.jianshu.io/upload_images/1210359-1a1439d885a31255.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320" alt="image"></p>
<h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p><a href="https://github.com/quanweiwang/QWDebuggingInformationOverlay" target="_blank" rel="external">QWDebuggingInformationOverlay</a></p>
<p>本文是基于下述原文进行了机器翻译并有增改，侵删！</p>
<p>原文：<a href="http://ryanipete.com/blog/ios/swift/objective-c/uidebugginginformationoverlay/" target="_blank" rel="external">http://ryanipete.com/blog/ios/swift/objective-c/uidebugginginformationoverlay/</a></p>
<p>图片素材来自<br>简书：<a href="http://www.jianshu.com/u/abdec57edfa1" target="_blank" rel="external">郭大猿</a> 的 <a href="http://www.jianshu.com/p/0efafc9cdd7f" target="_blank" rel="external">http://www.jianshu.com/p/0efafc9cdd7f</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是UIDebuggingInformationOverlay&quot;&gt;&lt;a href=&quot;#什么是UIDebuggingInformationOverlay&quot; class=&quot;headerlink&quot; title=&quot;什么是UIDebuggingInformationOverlay&quot;&gt;&lt;/a&gt;什么是UIDebuggingInformationOverlay&lt;/h1&gt;&lt;p&gt;UIDebuggingInformationOverlay是由苹果创建的私有子类，大概是帮助开发人员和设计师调试苹果自己的iOS应用程序。&lt;/p&gt;
&lt;p&gt;启用后，窗口会浮动在应用的内容上，如下所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1488825-279074db866c0051.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://www.wangquanwei.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS 同一应用设置不同图标和名称</title>
    <link href="http://www.wangquanwei.com/2017-04-27-1.html"/>
    <id>http://www.wangquanwei.com/2017-04-27-1.html</id>
    <published>2017-04-27T13:35:21.000Z</published>
    <updated>2017-05-21T14:03:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>参考资料：曾静的技术博客 <a href="http://blog.devzeng.com/blog/ios-two-version-app-setting-profile.html" target="_blank" rel="external">iOS开发之同一应用设置不同图标和名称</a></p>
<p>我们在开发中经常会遇到一个APP存在多个渠道版本，例如：debug版、App Store提交版、test试版、299$企业版、ipad版等。他们之间可能会存在不同的名字及不同的应用图标，bundle id。</p>
<h1 id="Bundle-id"><a href="#Bundle-id" class="headerlink" title="Bundle id"></a>Bundle id</h1><p>Bundle id 是iOS用来识别app是否相同的依据，因此Bundle id 全球唯一不可重复，因此我们需要打包多渠道版本就需要多个不同的Bundle id。<br><a id="more"></a></p>
<h1 id="Build-Configuration"><a href="#Build-Configuration" class="headerlink" title="Build Configuration"></a>Build Configuration</h1><p>Build Configuration XCode 默认会提供两个即Debug、Release。如下图所示<br><img src="http://ojgg6fpio.bkt.clouddn.com/iOS%20%E5%90%8C%E4%B8%80%E5%BA%94%E7%94%A8%E8%AE%BE%E7%BD%AE%E4%B8%8D%E5%90%8C%E5%9B%BE%E6%A0%87%E5%92%8C%E5%90%8D%E7%A7%B0%E5%9B%BE%E4%BA%8C.png" alt="image"></p>
<p>然鹅！默认的并不满足我们的需求，因此我们需要手动添加一个或者多个新配置项。<br>选中PROJECT的名称，然后选中Info，点击Configurations下面的+选择Duplicate “Debug” Configuration,如下图：<br><img src="http://ojgg6fpio.bkt.clouddn.com/iOS%20%E5%90%8C%E4%B8%80%E5%BA%94%E7%94%A8%E8%AE%BE%E7%BD%AE%E4%B8%8D%E5%90%8C%E5%9B%BE%E6%A0%87%E5%92%8C%E5%90%8D%E7%A7%B0%E5%9B%BE%E4%B8%80.png" alt="image"></p>
<p>可根据需求选择Debug or Release，如果选择Debug会在列表出现Debug Copy的行，如果选择Release会在列表出现Release copy的行，将我们新建的改成自己想要的名字即可。如下图就是将新建的改成AppStore。<br><img src="http://ojgg6fpio.bkt.clouddn.com/iOS%20%E5%90%8C%E4%B8%80%E5%BA%94%E7%94%A8%E8%AE%BE%E7%BD%AE%E4%B8%8D%E5%90%8C%E5%9B%BE%E6%A0%87%E5%92%8C%E5%90%8D%E7%A7%B0%E5%9B%BE%E4%B8%89.png" alt="image"></p>
<h1 id="User-Defined-Setting"><a href="#User-Defined-Setting" class="headerlink" title="User-Defined Setting"></a>User-Defined Setting</h1><blockquote>
<p>以下文字引用自曾静的技术博客 <a href="http://blog.devzeng.com/blog/ios-two-version-app-setting-profile.html" target="_blank" rel="external">iOS开发之同一应用设置不同图标和名称</a> 侵删</p>
<p>在Xcode中使用User-Defined Setting可以定义一些Xcode编译使用的宏配置，为了实现不同环境下App显示的名称和图标不同，可以在User-Defined Setting中定义一些有关应用程序名称和应用图标的配置。</p>
</blockquote>
<p>1、开启User-Defined Setting，如下图：<br><img src="http://ojgg6fpio.bkt.clouddn.com/iOS%20%E5%90%8C%E4%B8%80%E5%BA%94%E7%94%A8%E8%AE%BE%E7%BD%AE%E4%B8%8D%E5%90%8C%E5%9B%BE%E6%A0%87%E5%92%8C%E5%90%8D%E7%A7%B0%E5%9B%BE%E5%9B%9B.png" alt="image"></p>
<p>2、添加APP_DISPLAY_NAME(APP的名称)、APP_ICON_NAME(APP图标名称)和BUNDLE_IDENTIFIER（APP Bundle ID）三个配置选项，效果如下图：<br><img src="http://ojgg6fpio.bkt.clouddn.com/iOS%20%E5%90%8C%E4%B8%80%E5%BA%94%E7%94%A8%E8%AE%BE%E7%BD%AE%E4%B8%8D%E5%90%8C%E5%9B%BE%E6%A0%87%E5%92%8C%E5%90%8D%E7%A7%B0%E5%9B%BE%E4%BA%94.png" alt="image"></p>
<h1 id="配置应用图标"><a href="#配置应用图标" class="headerlink" title="配置应用图标"></a>配置应用图标</h1><p>1、配置应用图标</p>
<p>搜索Asset Catalog Compiler<br><img src="http://ojgg6fpio.bkt.clouddn.com/iOS%20%E5%90%8C%E4%B8%80%E5%BA%94%E7%94%A8%E8%AE%BE%E7%BD%AE%E4%B8%8D%E5%90%8C%E5%9B%BE%E6%A0%87%E5%92%8C%E5%90%8D%E7%A7%B0%E5%9B%BE%E5%85%AD.png" alt="image"></p>
<p>应用图标如图<br><img src="http://ojgg6fpio.bkt.clouddn.com/iOS%20%E5%90%8C%E4%B8%80%E5%BA%94%E7%94%A8%E8%AE%BE%E7%BD%AE%E4%B8%8D%E5%90%8C%E5%9B%BE%E6%A0%87%E5%92%8C%E5%90%8D%E7%A7%B0%E5%9B%BE%E5%85%AB.png" alt="image"></p>
<h1 id="配置应用名称"><a href="#配置应用名称" class="headerlink" title="配置应用名称"></a>配置应用名称</h1><p>1、配置应用名称<br><img src="http://ojgg6fpio.bkt.clouddn.com/iOS%20%E5%90%8C%E4%B8%80%E5%BA%94%E7%94%A8%E8%AE%BE%E7%BD%AE%E4%B8%8D%E5%90%8C%E5%9B%BE%E6%A0%87%E5%92%8C%E5%90%8D%E7%A7%B0%E5%9B%BE%E4%B8%83.png" alt="image"></p>
<h1 id="Demo地址"><a href="#Demo地址" class="headerlink" title="Demo地址"></a>Demo地址</h1><p><a href="https://github.com/quanweiwang/iOS-development-set-different-icon-and-name-of-the-same-application" target="_blank" rel="external">iOS开发之同一应用设置不同图标和名称</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考资料：曾静的技术博客 &lt;a href=&quot;http://blog.devzeng.com/blog/ios-two-version-app-setting-profile.html&quot;&gt;iOS开发之同一应用设置不同图标和名称&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我们在开发中经常会遇到一个APP存在多个渠道版本，例如：debug版、App Store提交版、test试版、299$企业版、ipad版等。他们之间可能会存在不同的名字及不同的应用图标，bundle id。&lt;/p&gt;
&lt;h1 id=&quot;Bundle-id&quot;&gt;&lt;a href=&quot;#Bundle-id&quot; class=&quot;headerlink&quot; title=&quot;Bundle id&quot;&gt;&lt;/a&gt;Bundle id&lt;/h1&gt;&lt;p&gt;Bundle id 是iOS用来识别app是否相同的依据，因此Bundle id 全球唯一不可重复，因此我们需要打包多渠道版本就需要多个不同的Bundle id。&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://www.wangquanwei.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS 处理JSON字符串里的特殊字符</title>
    <link href="http://www.wangquanwei.com/2017-03-14-1.html"/>
    <id>http://www.wangquanwei.com/2017-03-14-1.html</id>
    <published>2017-03-14T14:38:19.000Z</published>
    <updated>2017-03-15T13:19:03.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>今天遇到一个问题，本地将一个对象转成JSON字符串后传给后台，由于出现特殊字符&amp;导致后台无法正确处理该字符串。经过一番Google，现将问题及解决方法记录如下。</p>
<h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>附上stackoverflow地址 <a href="http://stackoverflow.com/questions/24551816/swift-encode-url" target="_blank" rel="external">http://stackoverflow.com/questions/24551816/swift-encode-url</a></p>
<p>附上常用字符集的解释 注释部分是对应的处理特殊字符的内容<br><a id="more"></a><br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">URLFragmentAllowedCharacterSet  <span class="comment">//  "#%&lt;&gt;[\]^`&#123;|&#125;</span></div><div class="line">URLHostAllowedCharacterSet      <span class="comment">//  "#%/&lt;&gt;?@\^`&#123;|&#125;</span></div><div class="line">URLPasswordAllowedCharacterSet  <span class="comment">//  "#%/:&lt;&gt;?@[\]^`&#123;|&#125;</span></div><div class="line">URLPathAllowedCharacterSet      <span class="comment">//  "#%;&lt;&gt;?[\]^`&#123;|&#125;</span></div><div class="line">URLQueryAllowedCharacterSet     <span class="comment">//  "#%&lt;&gt;[\]^`&#123;|&#125;</span></div><div class="line">URLUserAllowedCharacterSet      <span class="comment">//  "#%/:&lt;&gt;?@[\]^`</span></div></pre></td></tr></table></figure></p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">//swift3写法</span></div><div class="line">let allowedCharacterSet = (CharacterSet(charactersIn: <span class="string">"!*'();:@&amp;=+$,/?%#[] "</span>).inverted)</div><div class="line"></div><div class="line"><span class="keyword">if</span> let escapedString = originalString.addingPercentEncoding(withAllowedCharacters: allowedCharacterSet) &#123;</div><div class="line"><span class="comment">//do something with escaped string</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;今天遇到一个问题，本地将一个对象转成JSON字符串后传给后台，由于出现特殊字符&amp;amp;导致后台无法正确处理该字符串。经过一番Google，现将问题及解决方法记录如下。&lt;/p&gt;
&lt;h4 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;headerlink&quot; title=&quot;解决方案&quot;&gt;&lt;/a&gt;解决方案&lt;/h4&gt;&lt;p&gt;附上stackoverflow地址 &lt;a href=&quot;http://stackoverflow.com/questions/24551816/swift-encode-url&quot;&gt;http://stackoverflow.com/questions/24551816/swift-encode-url&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;附上常用字符集的解释 注释部分是对应的处理特殊字符的内容&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://www.wangquanwei.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS 获取当前屏幕显示的UIViewController</title>
    <link href="http://www.wangquanwei.com/2017-02-24-1.html"/>
    <id>http://www.wangquanwei.com/2017-02-24-1.html</id>
    <published>2017-02-24T12:54:40.000Z</published>
    <updated>2017-04-27T13:33:45.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>接到上级任务，需要给app新增一个检测版本更新的功能(299$账号 不上App Store)。<br>本文不讨论如何实现一个更新检测功能。</p>
<h4 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h4><p>1、新建一个继承NSObject的子类。<br>2、调用网络接口，将服务器版本号与本地版本号对比，得出是否需要弹出更新提示。<br>3、因为最低版本支持iOS8，所以使用iOS8新出的api UIAlertViewController。</p>
<p>那么问题来了,要弹出UIAlertViewController就必须使用如下方法，该方法又是UIViewController的方法,总不能外部传个ViewController进来吧？<a id="more"></a></p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)presentViewController:(<span class="built_in">UIViewController</span> *)viewControllerToPresent animated: (<span class="built_in">BOOL</span>)flag completion:(<span class="keyword">void</span> (^ __<span class="keyword">nullable</span>)(<span class="keyword">void</span>))completion <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">5</span>_0);</div></pre></td></tr></table></figure>
<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//获取当前屏幕显示的UIViewController </span></div><div class="line"><span class="comment">//objc写法</span></div><div class="line">- (<span class="built_in">UIViewController</span> *)currentViewController &#123;</div><div class="line"></div><div class="line">    <span class="built_in">UIViewController</span> * result;</div><div class="line">    <span class="built_in">UIWindow</span> * window = [<span class="built_in">UIApplication</span> sharedApplication].keyWindow;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (window.windowLevel != <span class="built_in">UIWindowLevelNormal</span>) &#123;</div><div class="line"></div><div class="line">        <span class="built_in">NSArray</span> * windows = [<span class="built_in">UIApplication</span> sharedApplication].windows;</div><div class="line">        <span class="keyword">for</span> (<span class="built_in">UIWindow</span> * tmpWin <span class="keyword">in</span> windows) &#123;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (tmpWin.windowLevel == <span class="built_in">UIWindowLevelNormal</span>) &#123;</div><div class="line">                window = tmpWin;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="built_in">UIView</span> * frontView = window.subviews.firstObject;</div><div class="line">    <span class="built_in">UIResponder</span> * nextResponder = frontView.nextResponder;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> ([nextResponder isKindOfClass:[<span class="built_in">UIViewController</span> <span class="keyword">class</span>]]) &#123;</div><div class="line">        result = (<span class="built_in">UIViewController</span> *)nextResponder;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> &#123;</div><div class="line">        result = window.rootViewController;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> result;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//获取当前屏幕显示的UIViewController </span></div><div class="line"><span class="comment">//swift 写法</span></div><div class="line">func currentViewController() -&gt; <span class="built_in">UIViewController</span>? &#123;</div><div class="line"></div><div class="line">    var result : <span class="built_in">UIViewController</span>?</div><div class="line">    var window = <span class="built_in">UIApplication</span>.shared.keyWindow</div><div class="line"></div><div class="line">    <span class="keyword">if</span> window?.windowLevel != <span class="built_in">UIWindowLevelNormal</span> &#123;</div><div class="line"></div><div class="line">        let windows = <span class="built_in">UIApplication</span>.shared.windows</div><div class="line">        <span class="keyword">for</span> tmpWin <span class="keyword">in</span> windows &#123;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> tmpWin.windowLevel == <span class="built_in">UIWindowLevelNormal</span> &#123;</div><div class="line">                window = tmpWin</div><div class="line">                <span class="keyword">break</span></div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    let frontView = window?.subviews.first</div><div class="line">    let nextResponder = frontView?.next</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (nextResponder?.isKind(of: <span class="built_in">UIViewController</span>.self))! &#123;</div><div class="line">        result = nextResponder as! <span class="built_in">UIViewController</span>?</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        result = window?.rootViewController</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> result</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>================= 2017.03.10更新 =================</p>
<p>针对在rootViewController的viewDidLoad里调用UIApplication.shared.keyWindow时会出现keyWindow为nil的情况作出解释</p>
<p>keyWindow设置过程<br>1、初始化AppDelegate的window。<br>2、初始化rootViewController。<br>3、设置window的rootViewController。<br>4、调用[self.window makeKeyAndVisible]方法设置window为keyWindow并让window显示在屏幕上。此时keyWindow才不为nil。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;接到上级任务，需要给app新增一个检测版本更新的功能(299$账号 不上App Store)。&lt;br&gt;本文不讨论如何实现一个更新检测功能。&lt;/p&gt;
&lt;h4 id=&quot;设计思路&quot;&gt;&lt;a href=&quot;#设计思路&quot; class=&quot;headerlink&quot; title=&quot;设计思路&quot;&gt;&lt;/a&gt;设计思路&lt;/h4&gt;&lt;p&gt;1、新建一个继承NSObject的子类。&lt;br&gt;2、调用网络接口，将服务器版本号与本地版本号对比，得出是否需要弹出更新提示。&lt;br&gt;3、因为最低版本支持iOS8，所以使用iOS8新出的api UIAlertViewController。&lt;/p&gt;
&lt;p&gt;那么问题来了,要弹出UIAlertViewController就必须使用如下方法，该方法又是UIViewController的方法,总不能外部传个ViewController进来吧？
    
    </summary>
    
      <category term="iOS" scheme="http://www.wangquanwei.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Xcode打包无法生成iOS APP 而生成 Generic Xcode的解决办法</title>
    <link href="http://www.wangquanwei.com/2017-02-23-1.html"/>
    <id>http://www.wangquanwei.com/2017-02-23-1.html</id>
    <published>2017-02-23T12:46:17.000Z</published>
    <updated>2017-02-23T13:08:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天在项目中加入了SnapKit时出现Archive打包不生成ipa而是出现Xcode Archive的情况，于是乎Google了一番，现将解决方案记录如下：</p>
<p><img src="http://ojgg6fpio.bkt.clouddn.com/111.png" alt="Xcode Archive"><a id="more"></a></p>
<p>原因:<br>当项目使用了第三方类库或者包含子工程时，XCode可能会生成Xcode Archive而不是ipa文件(主要还是看子工程的xcodeproj配置)。</p>
<p>解决方法:<br>1、找到子工程(我这里是SnapKit.xcodeproj)-&gt;Build Setting 搜索 Skip Install 将标记位NO改为YES。</p>
<p>2、找到子工程(我这里是SnapKit.xcodeproj)-&gt;Build Phases-&gt;Copy Headers中的所有头文件拉到Project下，即Public和Private下不能有文件。</p>
<p>3、找到子工程(我这里是SnapKit.xcodeproj)-&gt;Build Settings-&gt;Deployment-&gt;Installation Directory里的内容清空。</p>
<p>PS: 1、如果能确定是哪个第三方库导致的直接改即可，无法确定就把所有引入的第三方库都改一遍，否则可能依然无法生存ipa哦！<br>PS: 2、以上修改都是在第三方库的.xcodeproj里配置，主项目的Skip Install一定要为NO,不可修改成YES。</p>
<p>经过上述操作就又能打包ipa啦！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天在项目中加入了SnapKit时出现Archive打包不生成ipa而是出现Xcode Archive的情况，于是乎Google了一番，现将解决方案记录如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ojgg6fpio.bkt.clouddn.com/111.png&quot; alt=&quot;Xcode Archive&quot;&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://www.wangquanwei.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS 导航栏黑边？看我就够了</title>
    <link href="http://www.wangquanwei.com/2017-02-06-1.html"/>
    <id>http://www.wangquanwei.com/2017-02-06-1.html</id>
    <published>2017-02-06T13:44:20.000Z</published>
    <updated>2017-07-24T15:19:29.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="解决方法如下"><a href="#解决方法如下" class="headerlink" title="解决方法如下:"></a>解决方法如下:</h2><p>实现UINavigationControllerDelegate的- navigationController:willShowViewController:animated: 方法 <a id="more"></a></p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">"ViewController.h"</span></span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> ()&lt;<span class="title">UINavigationControllerDelegate</span>&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">ViewController</span></span></div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</div><div class="line">    [<span class="keyword">super</span> viewDidLoad];</div><div class="line">    <span class="comment">// Do any additional setup after loading the view, typically from a nib.</span></div><div class="line">    <span class="keyword">self</span>.navigationController.delegate = <span class="keyword">self</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)didReceiveMemoryWarning &#123;</div><div class="line">    [<span class="keyword">super</span> didReceiveMemoryWarning];</div><div class="line">    <span class="comment">// Dispose of any resources that can be recreated.</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">#pragma mark - UINavigationControllerDelegate -</span></div><div class="line">- (<span class="keyword">void</span>)navigationController:(<span class="built_in">UINavigationController</span> *)navigationController willShowViewController:(<span class="built_in">UIViewController</span> *)viewController animated:(<span class="built_in">BOOL</span>)animated &#123;</div><div class="line">    </div><div class="line">    <span class="comment">//判断当前viewController 是否是需要隐藏导航栏，如果是需要隐藏的VC isViewController将为YES 反之 NO 将会显示出导航栏</span></div><div class="line">    <span class="comment">//其中viewController为navigationController: willShowViewController: animated: 方法里的参数viewController</span></div><div class="line">    <span class="comment">//[ViewController class]中的ViewController为具体需要隐藏导航栏的类名</span></div><div class="line">    <span class="built_in">BOOL</span> isViewController = [viewController isKindOfClass:[ViewController <span class="keyword">class</span>]];</div><div class="line">    [navigationController setNavigationBarHidden:isViewController animated:<span class="literal">true</span>];</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;解决方法如下&quot;&gt;&lt;a href=&quot;#解决方法如下&quot; class=&quot;headerlink&quot; title=&quot;解决方法如下:&quot;&gt;&lt;/a&gt;解决方法如下:&lt;/h2&gt;&lt;p&gt;实现UINavigationControllerDelegate的- navigationController:willShowViewController:animated: 方法
    
    </summary>
    
      <category term="iOS" scheme="http://www.wangquanwei.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS集成支付宝支付</title>
    <link href="http://www.wangquanwei.com/2017-02-05-1.html"/>
    <id>http://www.wangquanwei.com/2017-02-05-1.html</id>
    <published>2017-02-05T12:42:07.000Z</published>
    <updated>2017-07-23T15:51:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>一、 开发前准备</p>
<p>iOS 支付宝SDK下载地址：(内含iOS Android 服务端demo及SDK)</p>
<p><a href="http://doc.open.alipay.com/doc2/detail?treeId=59&amp;articleId=103563&amp;docType=1" target="_blank" rel="external">http://doc.open.alipay.com/doc2/detail?treeId=59&amp;articleId=103563&amp;docType=1</a><br><img src="http://ojgg6fpio.bkt.clouddn.com/ali1.png" alt=""><a id="more"></a></p>
<p>二、 集成支付宝</p>
<p>1、解压支付宝钱包支付接口开发包2.0标准版(iOS 15.0.2).zip（忽略版本号）<br><img src="http://ojgg6fpio.bkt.clouddn.com/ali2.png" alt=""><br><img src="http://ojgg6fpio.bkt.clouddn.com/ali3.png" alt=""></p>
<p>2、创建个文件夹，找到如下文件，放到文件夹里。便于将文件统一拷入项目<br><img src="http://ojgg6fpio.bkt.clouddn.com/ali4.png" alt=""><br>3、创建项目并将支付宝SDK添加进项目（项目创建不再演示）<br><img src="http://ojgg6fpio.bkt.clouddn.com/ali5.png" alt=""><br>4、导入系统库（不导入编译不通过会报错）<br><img src="http://ojgg6fpio.bkt.clouddn.com/ali6.png" alt=""><br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">UIKit</span>.framework</div><div class="line"></div><div class="line">CoreGraphics.framework</div><div class="line"></div><div class="line">Foundation.framework</div><div class="line"></div><div class="line">CoreTelephony.framework</div><div class="line"></div><div class="line">CoreText.framework</div><div class="line"></div><div class="line">libz.tbd</div><div class="line"></div><div class="line">QuartzCore.framework</div><div class="line"></div><div class="line">SystemConfiguration.framework</div><div class="line"></div><div class="line">libc++.tbd</div><div class="line"></div><div class="line"><span class="built_in">CFNetwork</span>.framework</div><div class="line"></div><div class="line">CoreMotion.framework</div></pre></td></tr></table></figure></p>
<p>5、配置SDK路径<br><img src="http://ojgg6fpio.bkt.clouddn.com/ali7.png" alt=""><br><img src="http://ojgg6fpio.bkt.clouddn.com/ali8.png" alt=""><br>6、应用注册(支付宝支付要用)<br><img src="http://ojgg6fpio.bkt.clouddn.com/ali9.png" alt=""><br>7、调用支付宝支付<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">&lt;AlipaySDK/AlipaySDK.h&gt;</span></span></div><div class="line"><span class="meta">#import <span class="meta-string">"Order.h"</span></span></div><div class="line"><span class="meta">#import <span class="meta-string">"DataSigner.h"</span></span></div><div class="line"><span class="meta">#import <span class="meta-string">"APAuthV2Info.h"</span></span></div></pre></td></tr></table></figure></p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#pragma mark -- 支付宝支付 --</span></div><div class="line">- (<span class="keyword">void</span>) aliPay&#123;</div><div class="line"></div><div class="line">    <span class="comment">/*============================================================================*/</span></div><div class="line">    <span class="comment">/*=======================需要填写商户app申请的===================================*/</span></div><div class="line">    <span class="comment">/*============================================================================*/</span></div><div class="line">    <span class="built_in">NSString</span> *partner = <span class="string">@" "</span>;</div><div class="line">    <span class="built_in">NSString</span> *seller = <span class="string">@" "</span>;</div><div class="line">    <span class="built_in">NSString</span> *privateKey = <span class="string">@" "</span>;</div><div class="line">    <span class="comment">/*============================================================================*/</span></div><div class="line">    <span class="comment">/*============================================================================*/</span></div><div class="line">    <span class="comment">/*============================================================================*/</span></div><div class="line"></div><div class="line">    <span class="comment">/*</span></div><div class="line">    *生成订单信息及签名</div><div class="line">    */</div><div class="line">    <span class="comment">//将商品信息赋予AlixPayOrder的成员变量</span></div><div class="line">    Order *order = [[Order alloc] init];</div><div class="line">    order.partner = partner;</div><div class="line">    order.seller = seller;</div><div class="line">    order.tradeNO = <span class="string">@"11111"</span>; <span class="comment">//订单ID（由商家自行制定）</span></div><div class="line">    order.productName = <span class="string">@"支付宝充值测试"</span>; <span class="comment">//商品标题</span></div><div class="line">    order.productDescription = <span class="string">@"支付宝充值测试"</span>; <span class="comment">//商品描述</span></div><div class="line">    order.amount = <span class="string">@"10"</span>; <span class="comment">//商品价格</span></div><div class="line">    order.notifyURL =  <span class="string">@"https://www.taobao.com"</span>; <span class="comment">//回调URL,具体回调URL由服务端提供（淘宝网地址乱写的）</span></div><div class="line"></div><div class="line">    <span class="comment">//固定用法</span></div><div class="line">    order.service = <span class="string">@"mobile.securitypay.pay"</span>;</div><div class="line">    order.paymentType = <span class="string">@"1"</span>;</div><div class="line">    order.inputCharset = <span class="string">@"utf-8"</span>;</div><div class="line">    order.itBPay = <span class="string">@"30m"</span>;</div><div class="line">    order.showUrl = <span class="string">@"m.alipay.com"</span>;</div><div class="line"></div><div class="line">    <span class="comment">//应用注册scheme,在Info.plist定义URL types</span></div><div class="line">    <span class="built_in">NSString</span> *appScheme = <span class="string">@"Pay"</span>;</div><div class="line"></div><div class="line">    <span class="comment">//将商品信息拼接成字符串</span></div><div class="line">    <span class="built_in">NSString</span> *orderSpec = [order description];</div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"orderSpec = %@"</span>,orderSpec);</div><div class="line"></div><div class="line">    <span class="comment">//获取私钥并将商户信息签名,外部商户可以根据情况存放私钥和签名,只需要遵循RSA签名规范,并将签名字符串base64编码和UrlEncode</span></div><div class="line">    <span class="keyword">id</span>&lt;DataSigner&gt; signer = CreateRSADataSigner(privateKey);</div><div class="line">    <span class="built_in">NSString</span> *signedString = [signer signString:orderSpec];</div><div class="line"></div><div class="line">    <span class="comment">//将签名成功字符串格式化为订单字符串,请严格按照该格式</span></div><div class="line">    <span class="built_in">NSString</span> *orderString = <span class="literal">nil</span>;</div><div class="line">    <span class="keyword">if</span> (signedString != <span class="literal">nil</span>) &#123;</div><div class="line">        orderString = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@&amp;sign=\"%@\"&amp;sign_type=\"%@\""</span>,</div><div class="line">        orderSpec, signedString, <span class="string">@"RSA"</span>];</div><div class="line"></div><div class="line">        [[AlipaySDK defaultService] payOrder:orderString fromScheme:appScheme callback:^(<span class="built_in">NSDictionary</span> *resultDic) &#123;</div><div class="line">            <span class="built_in">NSLog</span>(<span class="string">@"reslut = %@"</span>,resultDic);</div><div class="line"></div><div class="line">            <span class="keyword">if</span>([[resultDic valueForKey:<span class="string">@"resultStatus"</span>] integerValue] == <span class="number">6001</span>)&#123;</div><div class="line">                <span class="built_in">NSLog</span>(<span class="string">@"您取消了支付"</span>);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ([[resultDic valueForKey:<span class="string">@"resultStatus"</span>] integerValue] == <span class="number">9000</span>)&#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;];</div><div class="line"></div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一、 开发前准备&lt;/p&gt;
&lt;p&gt;iOS 支付宝SDK下载地址：(内含iOS Android 服务端demo及SDK)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://doc.open.alipay.com/doc2/detail?treeId=59&amp;amp;articleId=103563&amp;amp;docType=1&quot;&gt;http://doc.open.alipay.com/doc2/detail?treeId=59&amp;amp;articleId=103563&amp;amp;docType=1&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://ojgg6fpio.bkt.clouddn.com/ali1.png&quot; alt=&quot;&quot;&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://www.wangquanwei.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS集成微信支付</title>
    <link href="http://www.wangquanwei.com/2017-01-08-1.html"/>
    <id>http://www.wangquanwei.com/2017-01-08-1.html</id>
    <published>2017-01-08T09:24:49.000Z</published>
    <updated>2017-07-23T15:53:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>一、开发前准备</p>
<p>iOS微信支付SDK下载地址<br><a href="https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&amp;t=resource/res_list&amp;verify=1&amp;id=open1419319164&amp;lang=zh_CN" target="_blank" rel="external">https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&amp;t=resource/res_list&amp;verify=1&amp;id=open1419319164&amp;lang=zh_CN</a></p>
<p><img src="http://ojgg6fpio.bkt.clouddn.com/wx1.png" alt=""><a id="more"></a></p>
<p>二、 集成微信支付</p>
<p>1、解压WeChatSDK1.6.2_Sample.zip（忽略版本号）(这个是微信支付的Demo)<br><img src="http://ojgg6fpio.bkt.clouddn.com/wx2.png" alt=""></p>
<p>2、创建个文件夹，找到如下文件，放到文件夹里。便于将文件统一拷入项目<br><img src="http://ojgg6fpio.bkt.clouddn.com/wx3.png" alt=""></p>
<p>3、创建项目并将微信支付SDK添加进项目（项目创建不再演示）<br><img src="http://ojgg6fpio.bkt.clouddn.com/wx4.png" alt=""></p>
<p>4、导入系统库（不导入编译不通过会报错）<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">SystemConfiguration.framework</div><div class="line"></div><div class="line">libz.tbd </div><div class="line"></div><div class="line">libsqlite3<span class="number">.0</span>.tbd</div><div class="line"></div><div class="line">CoreTelephony.framework</div></pre></td></tr></table></figure></p>
<p>5、修改info.plist文件<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">//iOS 9系统策略更新，限制了http协议的访问，此外应用需要在“Info.plist”中将要使用的URL Schemes列为白名单，才可正常检查其他应用是否安装。</div><div class="line">//受此影响，当你的应用在iOS 9中需要使用微信SDK的相关能力（分享、收藏、支付、登录等）时，需要在“Info.plist”里增加如下代码：</div><div class="line">&lt;key&gt;LSApplicationQueriesSchemes&lt;/key&gt;</div><div class="line">&lt;array&gt;</div><div class="line">&lt;string&gt;weixin&lt;/string&gt;</div><div class="line">&lt;/array&gt;</div><div class="line">&lt;key&gt;NSAppTransportSecurity&lt;/key&gt;</div><div class="line">&lt;dict&gt;</div><div class="line">&lt;key&gt;NSAllowsArbitraryLoads&lt;/key&gt;</div><div class="line">&lt;true/&gt;</div><div class="line">&lt;/dict&gt;</div></pre></td></tr></table></figure></p>
<p>6、注册微信支付<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//导入头文件</span></div><div class="line"><span class="meta">#import <span class="meta-string">"WXApi.h"</span></span></div><div class="line"><span class="meta">#import <span class="meta-string">"WXApiManager.h"</span></span></div></pre></td></tr></table></figure></p>
<p>在AppDelegate里<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">BOOL</span>)application:(<span class="built_in">UIApplication</span> *)application didFinishLaunchingWithOptions:(<span class="built_in">NSDictionary</span> *)launchOptions</div></pre></td></tr></table></figure></p>
<p><img src="http://ojgg6fpio.bkt.clouddn.com/wx5.png" alt=""><br><img src="http://ojgg6fpio.bkt.clouddn.com/wx6.png" alt=""></p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">BOOL</span>)application:(<span class="built_in">UIApplication</span> *)application handleOpenURL:(<span class="built_in">NSURL</span> *)url &#123;</div><div class="line">    <span class="keyword">return</span>  [WXApi handleOpenURL:url delegate:[WXApiManager sharedManager]];</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="built_in">BOOL</span>)application:(<span class="built_in">UIApplication</span> *)application openURL:(<span class="built_in">NSURL</span> *)url sourceApplication:(<span class="built_in">NSString</span> *)sourceApplication annotation:(<span class="keyword">id</span>)annotation &#123;</div><div class="line">    <span class="keyword">return</span> [WXApi handleOpenURL:url delegate:[WXApiManager sharedManager]];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>7、调用微信支付<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#pragma mark -- 微信支付 --</span></div><div class="line">- (<span class="keyword">void</span>)WeChatPay&#123;</div><div class="line"></div><div class="line">    PayReq *req   = [[PayReq alloc] init];</div><div class="line"></div><div class="line">    <span class="comment">/** 由用户微信号和AppID组成的唯一标识，发送请求时第三方程序必须填写，用于校验微信用户是否换号登录*/</span></div><div class="line">    req.openID = <span class="string">@""</span>;<span class="comment">//服务器返回</span></div><div class="line"></div><div class="line">    <span class="comment">/** 商家向财付通申请的商家id */</span></div><div class="line">    req.partnerId = <span class="string">@""</span>;<span class="comment">//服务器返回</span></div><div class="line"></div><div class="line">    <span class="comment">/** 预支付订单 */</span></div><div class="line">    req.prepayId  = <span class="string">@""</span>;<span class="comment">//服务器返回</span></div><div class="line"></div><div class="line">    <span class="comment">/** 商家根据财付通文档填写的数据和签名 */</span></div><div class="line">    req.package   = <span class="string">@""</span>;<span class="comment">//服务器返回 注意iOS只能是 Sign=WXPay 即req.package = Sign=WXPay</span></div><div class="line"></div><div class="line">    <span class="comment">/** 随机串，防重发 */</span></div><div class="line">    req.nonceStr  = <span class="string">@""</span>;<span class="comment">//服务器返回</span></div><div class="line"></div><div class="line">    <span class="comment">/** 时间戳，防重发 */</span></div><div class="line">    <span class="built_in">NSString</span> * stamp = <span class="string">@""</span>;<span class="comment">//服务器返回</span></div><div class="line">    req.timeStamp = stamp.intValue;</div><div class="line"></div><div class="line">    <span class="comment">/** 商家根据微信开放平台文档对数据做的签名 */</span></div><div class="line">    req.sign = <span class="string">@""</span>;<span class="comment">//服务器返回</span></div><div class="line"></div><div class="line">    <span class="comment">// 在支付之前，如果应用没有注册到微信，应该先调用IWXMsg.registerApp将应用注册到微信</span></div><div class="line">    [WXApi registerApp:<span class="string">@""</span>];</div><div class="line"></div><div class="line">    <span class="comment">//发送请求到微信，等待微信返回onResp</span></div><div class="line">    [WXApi sendReq:req];</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一、开发前准备&lt;/p&gt;
&lt;p&gt;iOS微信支付SDK下载地址&lt;br&gt;&lt;a href=&quot;https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&amp;amp;t=resource/res_list&amp;amp;verify=1&amp;amp;id=open1419319164&amp;amp;lang=zh_CN&quot;&gt;https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&amp;amp;t=resource/res_list&amp;amp;verify=1&amp;amp;id=open1419319164&amp;amp;lang=zh_CN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ojgg6fpio.bkt.clouddn.com/wx1.png&quot; alt=&quot;&quot;&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://www.wangquanwei.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac下安装Hexo教程</title>
    <link href="http://www.wangquanwei.com/2016-12-29-1.html"/>
    <id>http://www.wangquanwei.com/2016-12-29-1.html</id>
    <published>2016-12-28T16:00:00.000Z</published>
    <updated>2017-03-12T11:21:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文假设当前未安装任何环境。</p>
<p>一、安装brew<br>打开终端，输入<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/ruby -e <span class="string">"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"</span></div></pre></td></tr></table></figure></p>
<p>回车,会提示按任意键继续，继续会出现输入密码的提示，输入电脑的密码即可继续安装。<a id="more"></a></p>
<p>二、安装node.js<br>打开终端，输入<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install node</div></pre></td></tr></table></figure></p>
<p>等待安装完成，如无法安装，请使用科学上网。</p>
<p>三、安装Xcode<br>安装Hexo前提需要安装Xcode,Xcode是什么这里不做解释相信大家都懂的，不懂自行百度。<br>下载地址:<a href="https://itunes.apple.com/cn/app/xcode/id497799835?mt=12" target="_blank" rel="external">https://itunes.apple.com/cn/app/xcode/id497799835?mt=12</a></p>
<p>四、安装Hexo<br>打开终端，输入<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo npm install hexo -g <span class="meta"># -g表示全局安装, npm默认只安装在当前项目。</span></div></pre></td></tr></table></figure></p>
<p>五、Hexo使用<br>1、初始化hexo<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo init 文件夹名称 </div><div class="line"><span class="meta"># 例如 hexo init blog,hexo将会在bolg目录下生成站点文件。</span></div><div class="line"><span class="meta"># 如需指定目录请先cd到指定目录在执行。</span></div></pre></td></tr></table></figure></p>
<p>2、生成静态网页<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo generate 或者 hexo g</div></pre></td></tr></table></figure></p>
<p>3、开启服务<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server 或者 hexo s</div></pre></td></tr></table></figure></p>
<p>大功告成！现在浏览器输入<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000</a>就可以开到hexo默认的效果啦!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文假设当前未安装任何环境。&lt;/p&gt;
&lt;p&gt;一、安装brew&lt;br&gt;打开终端，输入&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/usr/bin/ruby -e &lt;span class=&quot;string&quot;&gt;&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;回车,会提示按任意键继续，继续会出现输入密码的提示，输入电脑的密码即可继续安装。
    
    </summary>
    
      <category term="Hexo" scheme="http://www.wangquanwei.com/categories/Hexo/"/>
    
    
  </entry>
  
</feed>
